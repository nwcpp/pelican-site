November 17th, 2010 — Bartosz Milewski — C++ vs. Haskell: Type Classes vs. Concepts
###################################################################################

:date: 2010-11-01
:slug: november-2010
:author: George Reilly

Abstract
~~~~~~~~

`C++ Concepts <http://en.wikipedia.org/wiki/Concepts_(C%2B%2B)>`_ got a lot
of bad press and were dropped from
`C++0x <http://en.wikipedia.org/wiki/C%2B%2B0x>`_. They were considered
too complex with too few benefits. And yet their equivalent in Haskell,
`type classes <http://en.wikipedia.org/wiki/Type_class>`_, are
considered simple and powerful. I will talk about both languages,
explaining some Haskell and C++ concept syntax as I go. I'll give
examples of problems that type classes solve and C++ concepts could have
solved. I'll show you the hair-raising forensics of a C++ ADL
(Argument-Dependent Lookup) mishap that could have been avoided by using
concepts.

Bio
~~~

Bartosz Milewski has a Ph.D. in High-Energy Physics and many
years of experience as a C++ programmer. He worked at Microsoft on the
Context Index--a search engine before the Internet, still an active part
of Windows 7. He designed the first distributed version control system,
`Code Co-op <http://www.relisoft.com/co_op/>`_ (before BitKeeper and
git). Bartosz took part in the design of the `D
language <http://www.digitalmars.com/d/>`_. His main topics of interest
are concurrent and distributed computing and language design. He
regularly publishes a blog at
`http://BartoszMilewski.wordpress.com <http://BartoszMilewski.wordpress.com>`_.
You may see him occasionally at CSE 950 P at the UW.

Resources
~~~~~~~~~

`Video <http://bartoszmilewski.wordpress.com/2010/11/29/understanding-c-concepts-through-haskell-type-classes/>`_
of the presentation.
