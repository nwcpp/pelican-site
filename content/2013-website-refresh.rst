2013 Website Refresh
####################

:date: 2013-01-15
:author: George Reilly

Over the last couple of weeks, I've moved the NWCPP website
from an instance of the Joomla_ CMS at `Just Host`_
to a static website generated by Pelican_ at `Github Pages`_.

.. figure:: {filename}images/joomla-screenshot.png
    :alt: Old Joomla-based website
    :width: 500px
    :target: \{filename}images/joomla-screenshot.png

    Old Joomla-based website


The Background
==============

The annual hosting bill was due next month,
but I wasn't happy with Joomla
and I didn't feel like organizing another whipround to pay for it.
Also, the nwcpp.org domain was about to expire
and `Network Solutions`_ wanted a surprisingly large amount of money to renew it.
So I transferred the domain to `Namecheap`_
and set to work creating a static site.

A CMS like Joomla seemed like a good idea
when I took over from the previous webmaster three years ago.
The preceding website had been built with `CityDesk`_,
which generated static HTML files
and required a lot of messing around with FTP.
Joomla turned out to be a big pain
and I spent a lot of time fighting with it.
And then there was the time when I was on vacation
and learned that the NWCPP website had been defaced,
thanks to an unpatched vulnerability in our installation.

A recent trend has been to move away from CMSes and dynamic blogs
to `static site generators`_ for simpler sites.
I wanted to explore some of them and I quickly settled on Pelican_.
It's built on Python (my primary language nowadays)
and accepts input in the lightweight markup languages,
reStructuredText_, `Markdown`_, and `AsciiDoc`_.
I have extensive `history with reStructuredText`_,
though I would also have been happy with Markdown.

In a typical CMS, the content is stored in a database.
I'm a developer; I like Git for version control of my documents.
Pelican and other SSGs lend themselves to this.


Converting HTML to reStructuredText
===================================

I `mirrored`_ the Joomla website with `Wget`_
and used Pandoc_ to convert the HTML to reST.
That was followed by a lot of hand-editing to clean up the filesâ€”\
13 years of near-monthly meetings led to about 150 files.
In retrospect, I could probably have saved some editing time
if I had used BeautifulSoup_ to filter out some of the HTML cruft on each page
before feeding it to Pandoc_ or html2rest_.

I `set up Pelican`_, plugged the reST in, and ran the devserver locally.
Already, it looked pretty good.


Multiple Identities at Github
=============================

I wanted to create a separate `Github identity for nwcpp`_,
as I won't be the webmaster forever.
That was a little tricky to manage,
but I found enough clues in a `StackOverflow question`_
to figure it out.

Here's my ``~/.ssh/config``:

.. code-block:: apache

    Host github-gvr
        HostName github.com
        User git
        PreferredAuthentications publickey
        IdentityFile ~/.ssh/id_rsa
        IdentitiesOnly yes

    Host github-nwcpp
        HostName github.com
        User git
        PreferredAuthentications publickey
        IdentityFile ~/.ssh/id_rsa_nwcpp

I have two SSH keys: ``github-gvr`` is tied to my primary Github account
while ``github-nwcpp`` is tied to the NWCPP account.
Note the ``IdentitiesOnly``.

I have to use a different *git remote* for the latter,
instead of ``git@github.com:nwcpp/pelican-site.git``:

.. code-block:: bash

    $ git remote -v
    origin	git@github-nwcpp:nwcpp/pelican-site.git (fetch)
    origin	git@github-nwcpp:nwcpp/pelican-site.git (push)


Github Pages
============

`Github Pages`_ is an easy, free way to publish static websites from a Github repo.
Pelican provides documentation on `publishing to Github Pages`_.

To get the *nwcpp.org* domain hosted there,
I had to set up a `custom domain`_
and change the `Namecheap DNS configuration`_.


Contact Form
============

I wanted to add a `contact form`_ rather than
publishing email addresses for the NWCPP board.
Obviously, there's no server-side piece in a pure static site,
so it has to be handled by a third party.
I found a helpful article on setting up a `Google Docs contact form`_,
which emails us as well as saving the form details in a spreadsheet.


Conclusion
==========

Pelican is fine for me and I'm much happier with it than Joomla.
It clearly wouldn't work for non-developers.

One annoyance is that Pelican is very blog-centric
and wants to generate a timeline of posts.
For dated announcements of monthly meetings,
that works very well.
For pages that don't fit on the timeline,
such as the `contact form`_ or the `sponsorship howto`_,
it's awkward.


.. _Joomla:
    http://www.joomla.org/
.. _Just Host:
    http://www.justhost.com/
.. _Pelican:
    http://blog.getpelican.com/
.. _Github Pages:
    http://pages.github.com/
.. _Network Solutions:
    https://www.networksolutions.com/
.. _Namecheap:
    http://www.namecheap.com/
.. _CityDesk:
    http://www.fogcreek.com/citydesk/
.. _static site generators:
    http://www.mickgardner.com/2012/12/an-introduction-to-static-site.html
.. _reStructuredText:
    http://docutils.sf.net/rst.html
.. _Markdown:
    http://en.wikipedia.org/wiki/Markdown
.. _AsciiDoc:
    http://www.methods.co.nz/asciidoc/index.html
.. _history with reStructuredText:
    http://www.georgevreilly.com/blog/CategoryView,category,reStructuredText.aspx
.. _mirrored:
    http://fosswire.com/post/2008/04/create-a-mirror-of-a-website-with-wget/
.. _Wget:
    http://www.gnu.org/software/wget/
.. _Pandoc:
    http://johnmacfarlane.net/pandoc/
.. _BeautifulSoup:
    http://www.crummy.com/software/BeautifulSoup/
.. _html2rest:
    http://pypi.python.org/pypi/html2rest
.. _set up Pelican:
    http://docs.getpelican.com/en/3.1.1/getting_started.html
.. _Github identity for nwcpp:
    https://github.com/nwcpp/
.. _StackOverflow question:
    http://stackoverflow.com/questions/3225862/multiple-github-accounts-ssh-config
.. _Github repo:
    https://github.com/nwcpp/pelican-site/
.. _publishing to Github Pages:
    http://docs.getpelican.com/en/3.1.1/tips.html
.. _custom domain:
    https://help.github.com/articles/setting-up-a-custom-domain-with-pages
.. _Namecheap DNS configuration:
    http://dreamand.me/github-page/github-page-custom-domain/
.. _contact form:
    {filename}/about/contact.rst
.. _sponsorship howto:
    {filename}/about/sponsors-howto.rst
.. _Google Docs contact form:
    http://www.bloggerbuster.com/2012/04/create-contact-form-with-google-docs.html
