April 18th, 2018: Microsoft MakeCode: from C++  to TypeScript and Blockly (and Back)
#####################################################################################

:date: 2018-03-24
:slug: april-2018
:author: Lloyd Moore

Announcements
~~~~~~~~~~~~~~~~~
We are currently looking for a pizza sponsor this month. If you have any suggestions please e-mail Lloyd at:
Lloyd@CyberData-Robotics.com

We are also looking for 2 more volunteers to help run the club as a couple of the current volunteers are stepping down
at the end of this year. If you are interested also please contact Lloyd.

Time and Location
~~~~~~~~~~~~~~~~~

| April 18th, 2018 at 7:00 PM
| Room 1083, Building 30,
 `Map to building 30 <https://www.google.com/maps/place/Microsoft+Building+30/@47.645004,-122.1243829,17z/data=!3m1!4b1!4m5!3m4!1s0x54906d7a92bfda0f:0xc03a9c414544c91e!8m2!3d47.6450004!4d-122.1221942>`_,
| ``*****`` **Note, this is our *new* normal meeting room!** ``*****``
| Microsoft Campus,
| 156th Ave NE,
| Redmond, WA 98052.

Title
~~~~~
Microsoft MakeCode: from C++  to TypeScript and Blockly (and Back)

Abstract
~~~~~~~~
Across the globe, it is now commonplace for educators to engage in the making (design and development) of embedded systems in the classroom to motivate and excite their students. This new domain brings its own set of unique requirements. Historically, embedded systems development requires knowledge of languages such as C and C++, local installation of compilation toolchains, device drivers and applications. For students and educators, these requirements introduce unnecessary barriers and restrictions.

Over the last two years, Microsoft has invested in a new web-based programming platform for embedded systems in education, called Microsoft MakeCode (www.makecode.com), in partnership with Lancaster University, who created the C++ Component-oriented Device Abstraction Layer (https://github.com/lancaster-university/codal). In this talk, I’ll describe the design principles behind MakeCode and CODAL and our experience with it to date. In particular, I’ll describe how our stack exposes C++ in the browser via TypeScript and Blockly programming APIs, with an in-browser compiler tool chain that produces executable files without the need for a C++ compiler in the core end-user experience.  MakeCode is open source at http://github.com/microsoft/pxt

Speaker Bio
~~~~~~~~~~~
Thomas Ball, Principal Researcher, Microsoft Research
http://research.microsoft.com/~tball/

Thomas (Tom) Ball is a principal researcher and manager at Microsoft Research. In 1999, He initiated the influential SLAM software model-checking project with Sriram Rajamani, which led to the creation of the Static Driver Verifier tool for finding defects in Windows device drivers. Tom is a 2011 ACM Fellow for ‘contributions to software analysis and defect detection’. As a manager, he has nurtured research areas such as automated theorem proving, program testing/verification and empirical software engineering. His current focus is the Microsoft Makecode platform for programming with physical computers.

A Word From Our Sponsor
~~~~~~~~~~~~~~~~~~~~~~~
Coming Soon!

Resources
~~~~~~~~~
Coming Soon!

Digital Media Links
~~~~~~~~~~~~~~~~~~~
* Sign up for our `announcements mailing list <http://groups.google.com/group/NwcppAnnounce1>`_ If you want to be more involved, sign up for our `volunteers <http://groups.google.com/group/nwcpp-volunteers>`_ list
* Check out our web page at http://www.nwcpp.org/
* Follow `@nwcpp <http://twitter.com/nwcpp>`_ on Twitter
* Join our `Facebook Group <http://www.facebook.com/group.php?gid=344125680930>`_
* Follow our `Google+ <https://plus.google.com/104974891006782790528/>`_ page
* Tune in to our `YouTube <http://www.youtube.com/user/NWCPP>`_ and `Vimeo <https://vimeo.com/nwcpp>`_ channels

