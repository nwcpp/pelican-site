<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Northwest C++ Users’ Group - 2002</title><link href="http://nwcpp.org/" rel="alternate"></link><link href="http://nwcpp.org/feeds/2002.atom.xml" rel="self"></link><id>http://nwcpp.org/</id><updated>2002-12-31T00:00:00-08:00</updated><entry><title>2002</title><link href="http://nwcpp.org/2002-summary.html" rel="alternate"></link><published>2002-12-31T00:00:00-08:00</published><updated>2002-12-31T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2002-12-31:/2002-summary.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/january-2002.html"&gt;January 9th, 2002 — Inter-Process Communications Using Shared Memory — Bartosz&amp;nbsp;Milewski&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/february-2002.html"&gt;February 13th, 2002 — Visual C++ .&lt;span class="caps"&gt;NET&lt;/span&gt; — Christian&amp;nbsp;Harlass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/march-2002.html"&gt;March 13th, 2002 — Schism++: How Microsoft Proposes to Bridge the Gap Between &lt;span class="caps"&gt;ANSI&lt;/span&gt; C++ and the ‘Managed C++’ of .&lt;span class="caps"&gt;NET&lt;/span&gt; — Matthew&amp;nbsp;Griscom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/april-2002.html"&gt;April 10th, 2002 — Honey, I Shrunk the Threads: Compile-time checked …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/january-2002.html"&gt;January 9th, 2002 — Inter-Process Communications Using Shared Memory — Bartosz&amp;nbsp;Milewski&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/february-2002.html"&gt;February 13th, 2002 — Visual C++ .&lt;span class="caps"&gt;NET&lt;/span&gt; — Christian&amp;nbsp;Harlass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/march-2002.html"&gt;March 13th, 2002 — Schism++: How Microsoft Proposes to Bridge the Gap Between &lt;span class="caps"&gt;ANSI&lt;/span&gt; C++ and the ‘Managed C++’ of .&lt;span class="caps"&gt;NET&lt;/span&gt; — Matthew&amp;nbsp;Griscom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/april-2002.html"&gt;April 10th, 2002 — Honey, I Shrunk the Threads: Compile-time checked multithreaded transactions in C++ — Andrei&amp;nbsp;Alexandrescu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/may-2002.html"&gt;May 8th, 2002 — Embedded C++ : An Overview — Robert&amp;nbsp;Blumberg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/june-2002.html"&gt;June 2002: No&amp;nbsp;Meeting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/july-2002.html"&gt;July 2002: No&amp;nbsp;Meeting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/august-2002.html"&gt;August 2002: No&amp;nbsp;Meeting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/september-2002.html"&gt;September 18th, 2002 — Understanding templates as a form of weak typing — Bruce&amp;nbsp;Eckel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/october-2002.html"&gt;October 9th, 2002 — C++ Features to Beware of Today, and to Anticipate in C++ 0x — Herb&amp;nbsp;Sutter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/november-2002.html"&gt;November 13th, 2002 — C++ Techniques for Tomorrow That Can be Implemented Today (aka Boosting your Code) — David&amp;nbsp;Brownell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nwcpp.org/december-2002.html"&gt;December 2002: No&amp;nbsp;Meeting&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>December 2002: No Meeting</title><link href="http://nwcpp.org/december-2002.html" rel="alternate"></link><published>2002-12-01T00:00:00-08:00</published><updated>2002-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-12-01:/december-2002.html</id><summary type="html"></summary><content type="html"></content></entry><entry><title>November 13th, 2002 — C++ Techniques for Tomorrow That Can be Implemented Today (aka Boosting your Code) — David Brownell</title><link href="http://nwcpp.org/november-2002.html" rel="alternate"></link><published>2002-11-01T00:00:00-08:00</published><updated>2002-11-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-11-01:/november-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This presentation will illustrate techniques to ensure code correctness
at compile time, extend the &lt;span class="caps"&gt;STL&lt;/span&gt;, and enhance C++ using the freely
available and portable boost libraries,
&lt;a class="reference external" href="http://www.boost.org"&gt;www.boost.org&lt;/a&gt;. Beginning with brief overviews
of the boost organization and the …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This presentation will illustrate techniques to ensure code correctness
at compile time, extend the &lt;span class="caps"&gt;STL&lt;/span&gt;, and enhance C++ using the freely
available and portable boost libraries,
&lt;a class="reference external" href="http://www.boost.org"&gt;www.boost.org&lt;/a&gt;. Beginning with brief overviews
of the boost organization and the boost libraries, we will then explore
ten specific boost libraries, covering the why’s, what’s, and how’s
behind the concepts that enable all three of the techniques listed&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;This presentation assumes familiarity with C++&amp;nbsp;templates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;David Brownell has been using C++ in a professional environment for the
past 5 years. Graduating with a &lt;span class="caps"&gt;BSCS&lt;/span&gt; from Seattle University in 1998,
David has worked on faxing applications, automated scripting utilities,
secure communications technologies, generic programming techniques, and
peer-to-peer applications. David currently works as a Software Engineer
at Aegis Design in Seattle,&amp;nbsp;Washington.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/talks/2002/BoostPresentation.zip"&gt;Click here&lt;/a&gt;
to download the slides and source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>October 9th, 2002 — C++ Features to Beware of Today, and to Anticipate in C++ 0x — Herb Sutter</title><link href="http://nwcpp.org/october-2002.html" rel="alternate"></link><published>2002-10-01T00:00:00-07:00</published><updated>2002-10-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-10-01:/october-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;From exception specifications to export, from typedef templates to
typeof to delegating constructors, this talk analyzes current C++
features that you should use with care if at all, and important new
C++0x language features coming soon to a …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;From exception specifications to export, from typedef templates to
typeof to delegating constructors, this talk analyzes current C++
features that you should use with care if at all, and important new
C++0x language features coming soon to a compiler near you. It shows why
the features are useful, where they have areas or effects that can be
dangerous or result in unintended effects, what kinds of coding idioms
and techniques they make possible, when you can expect them to be stable
in shipping compilers, who the people and companies behind them are, and
how you can use them safely and&amp;nbsp;effectively.&lt;/p&gt;
&lt;p&gt;Talk first given at &lt;a class="reference external" href="http://www.thecppseminar.com"&gt;The C++&amp;nbsp;Seminar&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Herb Sutter is conveyor and secretary, respectively, of the &lt;a class="reference external" href="http://std.dkuug.dk/jtc1/sc22/wg21/"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt; and
&lt;span class="caps"&gt;ANSI&lt;/span&gt; C++ standards committees&lt;/a&gt;,
contributing editor and columnist for &lt;a class="reference external" href="http://www.cuj.com"&gt;C/C++ Users Journal
(&lt;span class="caps"&gt;CUJ&lt;/span&gt;)&lt;/a&gt;, C++ community liaison for Microsoft, and
former editor-in-chief of C++ Report. He is also the author of more than
150 &lt;a class="reference external" href="http://www.gotw.ca/publications/index.htm"&gt;technical articles&lt;/a&gt;
and of the widely acclaimed books Exceptional C++, More Exceptional C++,
and the forthcoming titles C++ Coding Standards (with Andrei
Alexandrescu) and Exceptional C++&amp;nbsp;Style.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>September 18th, 2002 — Understanding templates as a form of weak typing — Bruce Eckel</title><link href="http://nwcpp.org/september-2002.html" rel="alternate"></link><published>2002-09-01T00:00:00-07:00</published><updated>2002-09-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-09-01:/september-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;As I learned the Python programming language (see
&lt;a class="reference external" href="http://www.python.org"&gt;www.Python.org&lt;/a&gt;), I began to understand the
concept of weak/latent typing (which the Smalltalk programmers are so
fond of). At first, this seems like a very heretical and dangerous …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;As I learned the Python programming language (see
&lt;a class="reference external" href="http://www.python.org"&gt;www.Python.org&lt;/a&gt;), I began to understand the
concept of weak/latent typing (which the Smalltalk programmers are so
fond of). At first, this seems like a very heretical and dangerous
approach, but with time I not only began to see how powerful it is, but
also to understand C++ templates in terms of weak typing. I found this
gave me a much deeper understanding of the value and use of templates.
In this talk, I will introduce the Python language and the concept of
weak typing, and I will show C++ templates in the same light. You should
come away with a deeper grasp of templates and where they can be put to&amp;nbsp;use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bruce Eckel (&lt;a class="reference external" href="http://www.bruceeckel.com"&gt;www.BruceEckel.com&lt;/a&gt;) is the
author of Thinking in Java (Prentice-Hall, 1998, 2nd Edition, 2000), the
Hands-On Java Seminar &lt;span class="caps"&gt;CD&lt;/span&gt; &lt;span class="caps"&gt;ROM&lt;/span&gt; (available on the Web site), Thinking in
C++ (&lt;span class="caps"&gt;PH&lt;/span&gt; 1995; 2nd edition 2000), C++ Inside &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Out (Osborne/McGraw-Hill
1993), among others. He&amp;#8217;s given hundreds of presentations throughout the
world, published over 150 articles in numerous magazines, was a founding
member of the &lt;span class="caps"&gt;ANSI&lt;/span&gt;/&lt;span class="caps"&gt;ISO&lt;/span&gt; C++ committee and speaks regularly at
conferences. He provides public and private seminars &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; design consulting
in C++ and&amp;nbsp;Java.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>August 2002: No Meeting</title><link href="http://nwcpp.org/august-2002.html" rel="alternate"></link><published>2002-08-01T00:00:00-07:00</published><updated>2002-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-08-01:/august-2002.html</id><summary type="html"></summary><content type="html"></content></entry><entry><title>July 2002: No Meeting</title><link href="http://nwcpp.org/july-2002.html" rel="alternate"></link><published>2002-07-01T00:00:00-07:00</published><updated>2002-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-07-01:/july-2002.html</id><summary type="html"></summary><content type="html"></content></entry><entry><title>June 2002: No Meeting</title><link href="http://nwcpp.org/june-2002.html" rel="alternate"></link><published>2002-06-01T00:00:00-07:00</published><updated>2002-06-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-06-01:/june-2002.html</id><summary type="html"></summary><content type="html"></content></entry><entry><title>May 8th, 2002 — Embedded C++ : An Overview — Robert Blumberg</title><link href="http://nwcpp.org/may-2002.html" rel="alternate"></link><published>2002-05-01T00:00:00-07:00</published><updated>2002-05-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-05-01:/may-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk sets out many of the parameters that are recurrent when
programming small- to moderately-sized embedded systems in C++. It then
delves into C++ techniques to work within the resource-limited,
cost-sensitive, required-robustness confines of embedded systems. These
techniques …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk sets out many of the parameters that are recurrent when
programming small- to moderately-sized embedded systems in C++. It then
delves into C++ techniques to work within the resource-limited,
cost-sensitive, required-robustness confines of embedded systems. These
techniques are also useful when building &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;nbsp;applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Robert Blumberg has over 35 years of programming experience, having
started by programming on &lt;span class="caps"&gt;IBM&lt;/span&gt; 7090 mainframes. As an executive, he has
been the director of Engineering at Bitstream and a &lt;span class="caps"&gt;VP&lt;/span&gt; of a speech
recognition company among other posts. However, he really enjoys
throwing C++ code, which he has been doing as a freelance programmer for
the last fifteen years or so, mostly for embedded systems and drivers.
Among other projects, he designed and coded the kernel, drivers and
coin-movement software for Coinstar’s big green coin-counting machines
often found in super&amp;nbsp;markets.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>April 10th, 2002 — Honey, I Shrunk the Threads: Compile-time checked multithreaded transactions in C++ — Andrei Alexandrescu</title><link href="http://nwcpp.org/april-2002.html" rel="alternate"></link><published>2002-04-01T00:00:00-08:00</published><updated>2002-04-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-04-01:/april-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk presents a couple of new, safe idioms that bring order in your
C++ multithreaded programs. We will cover three idioms for single-object
transactions and two idioms for multi-object transactions, with
examples. Warning: This talk is rated R …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk presents a couple of new, safe idioms that bring order in your
C++ multithreaded programs. We will cover three idioms for single-object
transactions and two idioms for multi-object transactions, with
examples. Warning: This talk is rated R for (C++) language abuse,
violence (of debate), and subliminal&amp;nbsp;content.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei is a world-class expert in software development using C++. In the
C++ community, he is best known for his book, Modern C++ Design (Addison
Wesley, 2001). Also, Andrei is a former columnist for the C++ Report, a
columnist for C/C++ Users Journal, and a sought-after speaker at
conferences&amp;nbsp;worldwide.&lt;/p&gt;
&lt;p&gt;After working in large-scale projects ranging from financial software on
Wall Street to networking software to user interfaces, Andrei is
pursuing a Ph.D. in Computer Science at University of&amp;nbsp;Washington.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>March 13th, 2002 — Schism++: How Microsoft Proposes to Bridge the Gap Between ANSI C++ and the ‘Managed C++’ of .NET — Matthew Griscom</title><link href="http://nwcpp.org/march-2002.html" rel="alternate"></link><published>2002-03-01T00:00:00-08:00</published><updated>2002-03-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-03-01:/march-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio 7 .&lt;span class="caps"&gt;NET&lt;/span&gt; has shipped with improved support for
&lt;span class="caps"&gt;ANSI&lt;/span&gt; C++. The whole .&lt;span class="caps"&gt;NET&lt;/span&gt; aspect of this tool, discussed extensively in
this and other forums, is radically new and at first blush is
incompatible with &lt;span class="caps"&gt;ANSI&lt;/span&gt; C …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio 7 .&lt;span class="caps"&gt;NET&lt;/span&gt; has shipped with improved support for
&lt;span class="caps"&gt;ANSI&lt;/span&gt; C++. The whole .&lt;span class="caps"&gt;NET&lt;/span&gt; aspect of this tool, discussed extensively in
this and other forums, is radically new and at first blush is
incompatible with &lt;span class="caps"&gt;ANSI&lt;/span&gt; C++, native code &lt;span class="caps"&gt;COM&lt;/span&gt; objects, etc. This talk will
address some of the aspects of how Microsoft proposes to bridge the gap
between existing source code, &lt;span class="caps"&gt;COM&lt;/span&gt; objects, etc. and executables using
the new suite of .&lt;span class="caps"&gt;NET&lt;/span&gt; technologies, in particular using the ‘Managed
C++’&amp;nbsp;syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Matthew Griscom has coded medical communications protocols, database
integrity tools, a multi-user database engine, &lt;span class="caps"&gt;XSL&lt;/span&gt;-driven web pages, you
name it, for both Unix and Windows. Now, if only one of the cosmonauts
on the Space Station would push the button to use the connectivity
software he designed and wrote, that would be sincerely cool… Matt’s
been dot-bombed and is looking for C++ and .&lt;span class="caps"&gt;NET&lt;/span&gt; work in greater&amp;nbsp;Seattle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/talks/2002/Meeting_2002-03.zip"&gt;Click here&lt;/a&gt;
to download the slides and source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>February 13th, 2002 — Visual C++ .NET — Christian Harlass</title><link href="http://nwcpp.org/february-2002.html" rel="alternate"></link><published>2002-02-01T00:00:00-08:00</published><updated>2002-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-02-01:/february-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio .&lt;span class="caps"&gt;NET&lt;/span&gt; will ship in the coming weeks (at least
they say so) and everybody is talking about C#, &lt;span class="caps"&gt;VB&lt;/span&gt;, &lt;span class="caps"&gt;ASP&lt;/span&gt;, and &lt;span class="caps"&gt;ADO&lt;/span&gt;. What
about C++? How does it fit with new technologies? We will explore a …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio .&lt;span class="caps"&gt;NET&lt;/span&gt; will ship in the coming weeks (at least
they say so) and everybody is talking about C#, &lt;span class="caps"&gt;VB&lt;/span&gt;, &lt;span class="caps"&gt;ASP&lt;/span&gt;, and &lt;span class="caps"&gt;ADO&lt;/span&gt;. What
about C++? How does it fit with new technologies? We will explore a
closer look at the new features of the compiler, the C Run-Time, and
three other libraries, namely &lt;span class="caps"&gt;STL&lt;/span&gt;, &lt;span class="caps"&gt;MFC&lt;/span&gt; and &lt;span class="caps"&gt;ATL&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Christian has come a long way from &lt;span class="caps"&gt;DOS&lt;/span&gt; to Unix and now to &lt;span class="caps"&gt;MS&lt;/span&gt; Windows (as
well as from Germany to Seattle!). Currently he works for Saxonia
Systems, a software consulting company based out of Dresden, Germany.
Besides his duties heading up Saxonia&amp;#8217;s &lt;span class="caps"&gt;U.S.&lt;/span&gt; consulting division in C++
programming, he is constantly keeping an eye on the market for new and
useful programming&amp;nbsp;tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/talks/2002/VC7Demo.zip"&gt;Click here&lt;/a&gt; to download the source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>January 9th, 2002 — Inter-Process Communications Using Shared Memory — Bartosz Milewski</title><link href="http://nwcpp.org/january-2002.html" rel="alternate"></link><published>2002-01-01T00:00:00-08:00</published><updated>2002-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-01-01:/january-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;You are stranded on a desert island. All you have is a piece of shared
memory and a waitable timer. You are supposed to implement robust
inter-process communications in C++. Bartosz will explain the concept of
shared memory in …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;You are stranded on a desert island. All you have is a piece of shared
memory and a waitable timer. You are supposed to implement robust
inter-process communications in C++. Bartosz will explain the concept of
shared memory in Win32 and its use in establishing a protocol for data
exchange between processes. It&amp;#8217;s better than &lt;span class="caps"&gt;DDE&lt;/span&gt; and simpler than &lt;span class="caps"&gt;COM&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz is the author of C++ In Action, Industrial Strength Programming
Techniques, published by Addison-Wesley in 2001. During his years at
Microsoft he worked on several projects involving various aspects of
operating systems. He ported the Mach &lt;span class="caps"&gt;OS&lt;/span&gt; virtual memory system to the
x86 platform, took part in the development of the &lt;span class="caps"&gt;HPFS&lt;/span&gt; and &lt;span class="caps"&gt;OFS&lt;/span&gt; file
systems, was the architect and development lead of the Windows 2000
content index. He is now the president of Reliable Software, a
distributed software&amp;nbsp;company.&lt;/p&gt;
&lt;/div&gt;
</content></entry></feed>