<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Northwest C++ Users’ Group</title><link href="http://nwcpp.org/" rel="alternate"></link><link href="http://nwcpp.org/feeds/all-en.atom.xml" rel="self"></link><id>http://nwcpp.org/</id><updated>2013-01-03T00:00:00-08:00</updated><entry><title>January 16, 2013 — Metadata and reflection in C++ — Jeff Tucker</title><link href="http://nwcpp.org/january-2013.html" rel="alternate"></link><updated>2013-01-03T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2013-01-03:january-2013.html</id><summary type="html">&lt;p&gt;Please &lt;a class="reference external" href="http://nwcpp.org/camera-donations.html"&gt;donate towards better video recordings&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;January 16, 2013 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+40"&gt;Building 40/1450–Steptoe&lt;/a&gt;.
&lt;strong&gt;Note: not our normal meeting&amp;nbsp;room&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Come at 6:45 for pizza sponsored by
&lt;a class="reference external" href="http://technologies.randstadusa.com/"&gt;Randstad Technologies&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;A robust reflection/metadata system in C++ can be extremely powerful
and has many applications, particularly in game programming.
It can facilitate sophisticated debug output and logging, trivial factory implementation,
automatic serialization and deserialization for any arbitrary object,
automatic binding to a &lt;span class="caps"&gt;GUI&lt;/span&gt; system,
and even automatic binding of objects and functions to a scripting language
(both Lua and Python are popular).
The typeinfo/&lt;span class="caps"&gt;RTTI&lt;/span&gt; system currently in C++ however
is simply not up to this level of functionality,
so a more sophisticated solution is necessary.
In this talk, I will implement a simple, yet powerful, meta reflection system in C++,
completely from scratch, and using test-driven development.
I will also show how I leverage a similar system in my own game engine.
Finally, I promise there will be no more than three PowerPoint&amp;nbsp;slides.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Jeff Tucker is a lecturer of Computer Science
at DigiPen Institute of Technology,
where he teaches classes on networking, databases, programming, and
software engineering.
He has been a software engineer for the past 13 years
and formerly worked at Microsoft on the Windows Core Networking team.
He also currently does research in procedural content generation
and graphics algorithms as well as making computer&amp;nbsp;games.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Welcome to the Northwest C++ Users’ Group</title><link href="http://nwcpp.org/about.html" rel="alternate"></link><updated>2013-01-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2013-01-01:about.html</id><summary type="html">&lt;p&gt;The Northwest C++ Users&amp;#8217; Group (&lt;span class="caps"&gt;NWCPP&lt;/span&gt;) is a group of professional developers and hobbyists
living and working in the Pacific Northwest
who meet monthly to discuss trends, techniques, and technology
regarding the C++ language and industry.
The group meetings and resources are free, and anyone and everyone is welcome to&amp;nbsp;attend.&lt;/p&gt;
&lt;p&gt;We are interested in&amp;nbsp;C++, C, the D language, concurrency, scalability,
performance, Boost, software engineering, design patterns, debugging,
compilers, tools, functional programming, software architecture,
machine architecture, DSLs, embedded software, test-driven development,
cross-platform development, distributed programming, and&amp;nbsp;more.&lt;/p&gt;
&lt;div class="section" id="meetings"&gt;
&lt;h2&gt;Meetings&lt;/h2&gt;
&lt;p&gt;Our meetings are held at the
&lt;a class="reference external" href="/static/images/MicrosoftMainCampusMap.jpg"&gt;main Microsoft campus&lt;/a&gt;,
One Microsoft Way, Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052,
in &lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+41"&gt;Building 41/1511–Townsend&lt;/a&gt;,
at the corner of &lt;span class="caps"&gt;NE&lt;/span&gt; 31st and 156th Ave &lt;span class="caps"&gt;NE&lt;/span&gt;.
Usually, we meet at 7pm on the &lt;em&gt;third Wednesday&lt;/em&gt; of the month.
You may need to knock on the window so that we can let you into the&amp;nbsp;building.&lt;/p&gt;
&lt;p&gt;Disclaimer: &lt;span class="caps"&gt;NWCPP&lt;/span&gt; is not associated with Microsoft—although we
take&amp;nbsp;advantage of their generosity in providing the venue and&amp;nbsp;occasional&amp;nbsp;speakers.&lt;/p&gt;
&lt;p&gt;Past speakers at our meetings include
&lt;a class="reference external" href="http://www.moderncppdesign.com"&gt;Andrei Alexandrescu&lt;/a&gt;,
&lt;a class="reference external" href="http://www.bruceeckel.com/"&gt;Bruce Eckel&lt;/a&gt;,
&lt;a class="reference external" href="http://www.construx.com/"&gt;Steve McConnell&lt;/a&gt;,
&lt;a class="reference external" href="http://www.aristeia.com/"&gt;Scott Meyers&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/bio-alan-shalloway"&gt;Alan Shalloway&lt;/a&gt;,
&lt;a class="reference external" href="http://www.wintellect.com/CS/blogs/jeffreyr/default.aspx"&gt;Jeffrey Richter&lt;/a&gt;,
&lt;a class="reference external" href="http://www.linkedin.com/in/rhschmidt"&gt;Bobby Schmidt&lt;/a&gt;,
&lt;a class="reference external" href="http://blogs.msdn.com/slippman"&gt;Stan Lippman&lt;/a&gt;,
&lt;a class="reference external" href="http://ericniebler.com/"&gt;Eric Niebler&lt;/a&gt;,
&lt;a class="reference external" href="http://www.bartosz.com/"&gt;Bartosz Milewski&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.gotw.ca/"&gt;Herb Sutter&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="social-media"&gt;
&lt;h3&gt;Social&amp;nbsp;Media&lt;/h3&gt;
&lt;p&gt;Sign up for our
&lt;a class="reference external" href="http://groups.google.com/group/NwcppAnnounce"&gt;Announcements&lt;/a&gt; list,
follow &lt;a class="reference external" href="http://twitter.com/nwcpp"&gt;&amp;#64;nwcpp&lt;/a&gt; on Twitter,
join our &lt;a class="reference external" href="http://www.facebook.com/group.php?gid=344125680930"&gt;Facebook group&lt;/a&gt;,
follow our &lt;a class="reference external" href="https://plus.google.com/104974891006782790528/"&gt;Google+ page&lt;/a&gt;,
follow our &lt;a class="reference external" href="https://vimeo.com/nwcpp"&gt;Vimeo channel&lt;/a&gt;,
and join our &lt;a class="reference external" href="http://www.linkedin.com/groups?gid=2770106"&gt;LinkedIn group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Seeking or offering a job?
Use our &lt;a class="reference external" href="http://www.linkedin.com/groupAnswers?viewQuestions=&amp;amp;gid=2770106&amp;amp;forumID=5&amp;amp;sik=1268291239461"&gt;LinkedIn Jobs Board&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>NWCPP Sponsors</title><link href="http://nwcpp.org/sponsors.html" rel="alternate"></link><updated>2012-12-31T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-12-31:sponsors.html</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;NWCPP&lt;/span&gt; thanks the following organizations for their&amp;nbsp;sponsorship.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://technologies.randstadusa.com/"&gt;Randstad&amp;nbsp;Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.summitgroupsolutions.com/"&gt;Summit Group&amp;nbsp;Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amazon.com/gp/digital/careers/jobs.html"&gt;Amazon&amp;nbsp;Digital&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="sponsoring-nwcpp"&gt;
&lt;h2&gt;Sponsoring&amp;nbsp;&lt;span class="caps"&gt;NWCPP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Want to sponsor &lt;span class="caps"&gt;NWCPP&lt;/span&gt;? Here&amp;#8217;s &lt;a class="reference external" href="http://nwcpp.org/sponsors-howto.html"&gt;how&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Donate towards better video recordings</title><link href="http://nwcpp.org/camera-donations.html" rel="alternate"></link><updated>2012-12-10T00:00:00-08:00</updated><author><name>Lloyd Moore</name></author><id>tag:nwcpp.org,2012-12-10:camera-donations.html</id><summary type="html">&lt;style&gt;
.left-float  {float: left}
.right-float {float: right; padding-left: 5em; }
&lt;/style&gt;&lt;div class="figure"&gt;
&lt;img alt="Donation Thermometer" class="right-float" src="http://nwcpp.org/static/images/thermometer.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;The bulk of the feedback we have received over the last year
on the videotaping of our meetings
has been that the sound quality is very poor.
To address this issue, the club would like to purchase a new video camera
that will allow us to use a remote microphone for the speaker.
The Northwest C++ Users’ Group is currently collecting donations
to fund a new camera to record our meetings.
Ideally we would like to collect $700 to purchase the&amp;nbsp;following:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;new &lt;span class="caps"&gt;HD&lt;/span&gt; video camera,&amp;nbsp;$400&lt;/li&gt;
&lt;li&gt;wireless microphone for the presenter,&amp;nbsp;$150&lt;/li&gt;
&lt;li&gt;tripod,&amp;nbsp;$100&lt;/li&gt;
&lt;li&gt;camera bag,&amp;nbsp;$50&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This equipment will be used to improve the quality of the recordings for our monthly meetings,
in particular the sound quality.
The videos of our meetings will continue to be posted
on our &lt;a class="reference external" href="http://vimeo.com/nwcpp"&gt;Vimeo channel&lt;/a&gt;
so those who cannot attend our meeting in person
can still benefit from our speaker&amp;nbsp;presentations.&lt;/p&gt;
&lt;p&gt;Watch our president, Lloyd Moore, &lt;a class="reference external" href="https://vimeo.com/55217359"&gt;announce our fundraiser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you would like to help us in this effort, please click on the “Donate”&amp;nbsp;button.&lt;/p&gt;
&lt;br /&gt;
&lt;form action="https://www.paypal.com/cgi-bin/webscr" method="post"&gt;
    &lt;input name="cmd" type="hidden" value="_s-xclick" /&gt;
    &lt;input name="hosted_button_id" type="hidden" value="NH22STZVNWVC4" /&gt;
    &lt;input alt="PayPal - The safer, easier way to pay online!"
        name="submit" type="image"
        src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" /&gt;
    &lt;img src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif"
        border="0" width="1" height="1" /&gt;
&lt;/form&gt;
&lt;br /&gt;&lt;p&gt;The &lt;a class="reference external" href="/"&gt;Northwest C++ Users&amp;#8217; Group&lt;/a&gt; is registered
as a 501(c)(3) non-profit organization.
Contributions to the Northwest C++ Users&amp;#8217; Group
are tax-deductible to the extent permitted by law.
Our tax identification number is &lt;strong&gt;91-1718733&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Thank you very much for your continued support of the Northwest C++ Users&amp;#8217; Group
and we look forward to bringing you another year of interesting and engaging&amp;nbsp;speakers!&lt;/p&gt;
</summary></entry><entry><title>December 2012: No Meeting</title><link href="http://nwcpp.org/december-2012.html" rel="alternate"></link><updated>2012-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2012-12-01:december-2012.html</id><summary type="html"></summary></entry><entry><title>November 21st, 2012 — TouchDevelop: Tips and Types for Programming via Touch — Tom Ball</title><link href="http://nwcpp.org/november-2012.html" rel="alternate"></link><updated>2012-11-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-11-01:november-2012.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;November 21, 2012 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+41"&gt;Building&amp;nbsp;41/1511–Townsend&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.touchdevelop.com"&gt;TouchDevelop&lt;/a&gt; brings a modern programming experience
to devices where touch is the primary input mechanism, such as smartphones and tablets.
The TouchDevelop environment does this through an interlocking set of features,&amp;nbsp;including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a simple statically-typed scripting&amp;nbsp;language;&lt;/li&gt;
&lt;li&gt;syntax-directed editing with a context-sensitive virtual&amp;nbsp;keyboard;&lt;/li&gt;
&lt;li&gt;code completion and refactoring&amp;nbsp;features;&lt;/li&gt;
&lt;li&gt;integrated search of platform&amp;nbsp;APIs;&lt;/li&gt;
&lt;li&gt;cloud-based sharing, searching, and synthesis of&amp;nbsp;code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this talk, I’ll demonstrate the TouchDevelop Web App
and focus on some of the unique features of the TouchDevelop language,
including support for client/cloud shared data.
Additionally, I’ll describe how the TouchDevelop Web App was written in
&lt;a class="reference external" href="http://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt;,
a typed superset of JavaScript that compiles to plain JavaScript.
The TouchDevelop web application is a complete rewrite of the C#/&lt;span class="caps"&gt;XAML&lt;/span&gt;-based TouchDevelop
application for Windows&amp;nbsp;Phone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://research.microsoft.com/en-us/people/tball/"&gt;Thomas (Tom) Ball&lt;/a&gt;
is a Principal Researcher and Research Manager at Microsoft Research Redmond,
where he works in the area of software engineering,
having made contributions in program profiling, software model checking,
and empirical software engineering.
Tom is a 2011 &lt;span class="caps"&gt;ACM&lt;/span&gt;&amp;nbsp;Fellow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/54243075"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/touchdevelop2012.pptx"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 17th, 2012 — Casablanca: C++ in the Cloud — Steve Gates</title><link href="http://nwcpp.org/october-2012.html" rel="alternate"></link><updated>2012-10-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-10-01:october-2012.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;October 17, 2012 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+41"&gt;Building&amp;nbsp;41/1511–Townsend&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;In this talk, I&amp;#8217;ll introduce the Microsoft incubation project
&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/devlabs/casablanca.aspx"&gt;Casablanca&lt;/a&gt;,
the aim of which is to help C++ developers productively
take advantage of cloud based computing without sacrificing performance.
Through a series of libraries and tooling,
Casablanca provides support for accessing Azure&amp;#8217;s platform as a service (PaaS) functionality
and general purpose client and server &lt;span class="caps"&gt;REST&lt;/span&gt; communication.
Key aspects about the libraries in Casablanca include cross platform support,
leveraging modern C++11 features for productivity,
and &lt;span class="caps"&gt;API&lt;/span&gt; design asynchrony in mind to improve application responsiveness and&amp;nbsp;scalability.&lt;/p&gt;
&lt;p&gt;With this talk, we&amp;#8217;ll go through the fundamental principles that
Casablanca is built on, an overview of the features it provides,
and several demos and examples illustrating what kind of applications can be built.
If you have interest in using C++ to author or interact with services in Azure
or &lt;span class="caps"&gt;REST&lt;/span&gt; services in general, this talk is for&amp;nbsp;you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Steve Gates is a senior tester on the Visual C++ team at Microsoft.
He has been at Microsoft for the past 5 years working on parallel computing in C++,
specifically the C++ Concurrency Runtime, &lt;span class="caps"&gt;PPL&lt;/span&gt;, and Agents Library.
Now he is focusing on the C++ experience for the cloud and Azure.
In his free time, Steve is interested in growing vegetables and food&amp;nbsp;preservation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://vimeo.com/51695153"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/casablanca.pptx"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 19th, 2012 — Functional Patterns in C++ — Bartosz Milewski</title><link href="http://nwcpp.org/september-2012.html" rel="alternate"></link><updated>2012-09-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-09-01:september-2012.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;September 19, 2012 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+41"&gt;Building&amp;nbsp;41/1511–Townsend&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;We are familiar with at least some of the GoF patterns like Visitor or Factory.
Less known are some very powerful abstract patterns used primarily in functional languages.
I will show you how to implement them in C++,
as long as you don&amp;#8217;t get intimidated by names
like Type Constructor, Functor, Applicative Functor, or Monad.
Examples of those patterns are everywhere:
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::unique_ptr&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::vector&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::function&lt;/span&gt;&lt;/tt&gt;, and many more.
What piqued my interest in those patterns was their use in C#
to solve some of the problem of abstracting asynchronous APIs and threads.
Their understanding might help in fixing C++11 support for&amp;nbsp;concurrency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz Milewski has a Ph.D. in Quantum Physics and many years of
experience as a C++ programmer.
He worked at Microsoft on the Context Index—a search engine before the Internet—still an active part of Windows.
He designed the first distributed version control system,
&lt;a class="reference external" href="http://www.relisoft.com/co_op/"&gt;Code Co-op&lt;/a&gt; (before BitKeeper and Git).
Bartosz took part in the design of the &lt;a class="reference external" href="http://www.digitalmars.com/d/2.0/index.html"&gt;D language&lt;/a&gt;.
His main topics of interest are concurrent and distributed computing.
He works as a Software Architect at &lt;span class="caps"&gt;FP&lt;/span&gt; Complete,
a company whose goal is to make Haskell an industrial language.
He regularly publishes a blog at
&lt;a class="reference external" href="http://bartoszmilewski.wordpress.com/"&gt;http://BartoszMilewski.com&lt;/a&gt;
and at &lt;a class="reference external" href="http://fpcomplete.com/blog"&gt;http://FPComplete.com/blog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://fpcomplete.com/functional-patterns-in-c/"&gt;Video and&amp;nbsp;Slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 2012: No Meeting</title><link href="http://nwcpp.org/august-2012.html" rel="alternate"></link><updated>2012-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2012-08-01:august-2012.html</id><summary type="html"></summary></entry><entry><title>July 2012: No Meeting</title><link href="http://nwcpp.org/july-2012.html" rel="alternate"></link><updated>2012-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2012-07-01:july-2012.html</id><summary type="html"></summary></entry><entry><title>June 20th, 2012 — LKRhash: The design of a scalable hashtable — George V. Reilly</title><link href="http://nwcpp.org/june-2012.html" rel="alternate"></link><updated>2012-06-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-06-01:june-2012.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;June 20th, 2012 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+41"&gt;Building&amp;nbsp;41/1511–Townsend&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;LKRhash is a hashtable that scales to multiple processors and millions of items.
LKRhash was invented at Microsoft in 1997 by Paul Larson, Murali Krishnan, and George Reilly,
and has been used in many Microsoft products.
George will discuss the techniques that give LKRhash its performance,
including&amp;nbsp;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Linear_hashing"&gt;linear hashing&lt;/a&gt;,
cache-friendly data structures, and fine-grained&amp;nbsp;locking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://plus.google.com/114544378971035279158/about"&gt;George Reilly&lt;/a&gt;
is a lead developer at &lt;a class="reference external" href="http://www.cozi.com/"&gt;Cozi&lt;/a&gt;
who spent 10 years working at Microsoft.
He is a graduate of Trinity College Dublin and Brown University.
He cowrote &lt;a class="reference external" href="http://www.amazon.com/Beginning-ATL-3-Com-Programming/dp/1861001207"&gt;Beginning &lt;span class="caps"&gt;ATL&lt;/span&gt; 3 &lt;span class="caps"&gt;COM&lt;/span&gt; Programming&lt;/a&gt;
(Wrox 1999) and &lt;a class="reference external" href="http://www.amazon.com/Professional-Active-Server-Pages-3-0/dp/B0000B0SYJ/"&gt;Professional Active Server Pages 3.0&lt;/a&gt;
(Wrox 1999).
George is, among other things, a cyclist;
the President of &lt;a class="reference external" href="http://freelyspeaking.org/"&gt;Freely Speaking Toastmasters&lt;/a&gt;;
the Director &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Dramaturg of the &lt;a class="reference external" href="http://www.wildgeeseseattle.org/"&gt;Wild Geese Players of Seattle&lt;/a&gt;;
and the Secretary/Webmaster of &lt;a class="reference external" href="http://nwcpp.org/"&gt;&lt;span class="caps"&gt;NWCPP&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://vimeo.com/44575071"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/lkrhash.pptx"&gt;Slides&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/hashtable.py.txt"&gt;Python hashtable simulator&lt;/a&gt; |
&lt;a class="reference external" href="http://www.csd.uoc.gr/~hy460/pdf/Dynamic%20Hash%20Tables.pdf"&gt;Linear Hashing&amp;nbsp;paper&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>May 16th, 2012 — An Introduction to Microsoft’s C++ Accelerated Massive Parallelism – Don McCrady</title><link href="http://nwcpp.org/may-2012.html" rel="alternate"></link><updated>2012-05-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-05-01:may-2012.html</id><summary type="html">&lt;p&gt;Come at 6:45 for pizza sponsored by
&lt;a class="reference external" href="http://technologies.randstadusa.com/"&gt;Randstad Technologies&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft’s C++ &lt;span class="caps"&gt;AMP&lt;/span&gt; (&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/library/hh265136(v=vs.110).aspx"&gt;Accelerated Massive Parallelism&lt;/a&gt;)
is a C++ programming model and language extension that allows any C++ developer
to take advantage of the massive parallelism available in today’s &lt;span class="caps"&gt;GPU&lt;/span&gt;’s.
It offers a developer-friendly, lightweight, and portable interface
that can enable programmers to achieve impressive performance boosts
on a variety of hardware platforms.
As an integrated part of Visual C++,
it is also supported by a full suite of familiar developer tools
including the editor, debugger, and profiler.
This presentation will introduce C++ &lt;span class="caps"&gt;AMP&lt;/span&gt;
and talk about its projected future as the hardware ecosystem&amp;nbsp;evolves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Madan Musuvathi is a Senior Researcher in the
Don McCrady is the development lead for the C++ &lt;span class="caps"&gt;AMP&lt;/span&gt; project.
He has worked for Microsoft for nearly 15 years in many diverse areas
including &lt;span class="caps"&gt;COM&lt;/span&gt; services, workflow services, and concurrency programming models.
In his spare time, he is an avid (if highly frustrated) astrophotographer and amateur&amp;nbsp;astronomer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/42419539"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/accelerated-massive-parallelism.pptx"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 18th, 2012 — Essential Skills for the Agile Developer – Alan Shalloway</title><link href="http://nwcpp.org/april-2012.html" rel="alternate"></link><updated>2012-04-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-04-01:april-2012.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Many developers have been suddenly thrown into developing code in stages
whereas they used to be able to do bigger designs up front.
Many people tell them to do test-driven development and emergent design
while ignoring the fact that their work with legacy systems may prevent such actions.
In any event, new methods require new skills – skills they don’t have time to get.
At first, it may appear that the required developer skill set for this new way of writing code
is huge and daunting.
Fortunately, it isn’t.
One of the things we’ve learned at Net Objectives,
is that there are often a few simple things one can do that make a huge difference.
We like to have people start with these trim tabs.
We refer to these as trim tabs since they are small things that make a big difference.
This talk introduces some trim tabs for the new agile&amp;nbsp;developer.&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Programming by&amp;nbsp;Intention&lt;/li&gt;
&lt;li&gt;Separating Use from&amp;nbsp;&amp;nbsp;Construction&lt;/li&gt;
&lt;li&gt;Define tests Up&amp;nbsp;Front&lt;/li&gt;
&lt;li&gt;Shalloway’s&amp;nbsp;Law&lt;/li&gt;
&lt;li&gt;Encapsulate&amp;nbsp;That&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The lessons learned are taken from Net Objectives’ new book
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/essential-skills-agile-developers"&gt;Essential Skills for the Agile Developer&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Alan&amp;nbsp;Shalloway&lt;/strong&gt; is the founder and &lt;span class="caps"&gt;CEO&lt;/span&gt; of &lt;a class="reference external" href="http://www.netobjectives.com/"&gt;Net Objectives&lt;/a&gt;.
With over 40 years of experience, Alan is an industry thought leader
in Lean, Kanban, Scrum and design patterns.
He helps companies transition to Lean and Agile methods enterprise-wide
as well teaches courses in these areas.
Alan has developed training and coaching methods for Lean-Agile
that have helped his clients achieve long-term, sustainable productivity gains.
He is a popular speaker at prestigious conferences worldwide.
He is the primary author of
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/design-patterns-explained"&gt;Design Patterns Explained: A New Perspective on Object-Oriented Design&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-pocket-guide-scrum-teams"&gt;Lean-Agile Pocket Guide for Scrum Teams&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-software-development"&gt;Lean-Agile Software Development: Achieving Enterprise Agility&lt;/a&gt;,
and is currently writing
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/essential-skills-agile-developers"&gt;Essential Skills for the Agile Developer&lt;/a&gt;.
Alan has worked in literally dozens of industries over his career.
He is a co-founder and board member for the
&lt;a class="reference external" href="http://www.leanssc.org/"&gt;Lean Software and Systems Consortium&lt;/a&gt;.
He has a Masters in Computer Science from &lt;span class="caps"&gt;M.I.T.
&lt;/span&gt;as well as a Masters in Mathematics from Emory University.
You can follow Alan on Twitter,
&lt;a class="reference external" href="http://twitter.com/alshalloway"&gt;&amp;#64;alshalloway&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/40726192"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/essential-skills-for-the-agile-developer-2012.pdf"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 21st, 2012 — A Multi-Core Algorithmic Differentiation Benchmarking System — Brad Bell</title><link href="http://nwcpp.org/march-2012.html" rel="alternate"></link><updated>2012-03-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-03-01:march-2012.html</id><summary type="html">&lt;p&gt;Please join us at 6:45 for pizza sponsored by
&lt;a class="reference external" href="http://www.summitgroupsolutions.com/"&gt;Summit Group Solutions&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Implementing code that is fast in a multi-core environment
is one of the challenges of modern software&amp;nbsp;engineering.&lt;/p&gt;
&lt;p&gt;To meet this challenge, future Automatic Differentiation (&lt;span class="caps"&gt;AD&lt;/span&gt;) software
will have to avoid excessive synchronization barriers between threads as
well as manage memory&amp;nbsp;efficiently.&lt;/p&gt;
&lt;p&gt;This talk presents a benchmarking system that is being used as an aid in
the development of the C++ &lt;span class="caps"&gt;AD&lt;/span&gt; software package
&lt;a class="reference external" href="http://www.coin-or.org/CppAD/"&gt;CppAD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Different threading systems, and different versions of this software package,
are easily compared for speed of&amp;nbsp;execution.&lt;/p&gt;
&lt;p&gt;As an example of the importance of this benchmark testing,
and how it has improved this software package,
we compare the results for three versions of CppAD.
These versions correspond to improvements
in a general purpose C++ multi-threading memory allocator
that is now part of the CppAD&amp;nbsp;library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.seanet.com/~bradbell/"&gt;Dr. Bell&lt;/a&gt; received his &lt;span class="caps"&gt;BA&lt;/span&gt; in math
and physics from Saint Lawrence University in 1973,
his &lt;span class="caps"&gt;MA&lt;/span&gt; in mathematics from the University of Washington in 1976,
and his Ph.D. in mathematics from the University of Washington in 1984.
Currently he is employed by the Applied Physics Laboratory of the University of Washington.
Much of his current work is in collaboration with the &lt;span class="caps"&gt;UW&lt;/span&gt; School of Public Health
as a member of the The Institute for Health Metrics and Evaluation.
He is also the project manager for the Coin-&lt;span class="caps"&gt;OR&lt;/span&gt; Algorithmic Differentiation project CppAD.
His current research is focused on statistically motivated numerical methods
for scientific modeling and data analysis.
This includes: algorithmic differentiation, Kalman filtering and smoothing,
stochastic function estimation (Tikhonov regularization),
nonlinear mixed effects estimation, optimization, and monte-carlo&amp;nbsp;simulation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/39008544"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/cppad-benchmark.pdf"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CppAD pages are best viewed with Firefox, as they make heavy use of
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/MathML"&gt;MathML&lt;/a&gt; to display&amp;nbsp;math.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.coin-or.org/CppAD/"&gt;CppAD homepage&lt;/a&gt;
| &lt;a class="reference external" href="http://www.coin-or.org/CppAD/Doc/thread_test.cpp.xml"&gt;multi-threading test routine&lt;/a&gt;
| &lt;a class="reference external" href="http://www.coin-or.org/CppAD/Doc/introduction.xml"&gt;intro to theory of &lt;span class="caps"&gt;AD&lt;/span&gt;&lt;/a&gt;
| &lt;a class="reference external" href="http://www.coin-or.org/CppAD/Doc/get_started.cpp.xml"&gt;getting started with&amp;nbsp;CppAD&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 15th, 2012 — Expressing Parallel Patterns in Modern C++ — Rahul V. Patil</title><link href="http://nwcpp.org/february-2012.html" rel="alternate"></link><updated>2012-02-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2012-02-01:february-2012.html</id><summary type="html">&lt;p&gt;Come at 6:30pm for pizza supplied by
&lt;a class="reference external" href="http://www.amazon.com/gp/digital/careers/jobs.html"&gt;Amazon Digital&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;We’ll do a lap around the most commonly applicable parallel patterns.
The goal of the talk is to map each of these parallel patterns to equivalent C++ code,
while taking advantage of the modern constructs in the language.
We’ll demonstrate this by looking at the Parallel Patterns Library
available in Visual Studio and Intel’s &lt;span class="caps"&gt;TBB&lt;/span&gt;.
We’ll also look at some tools within Intel’s Parallel Studio and Microsoft’s Visual Studio
that help identify, debug and analyze parallel&amp;nbsp;programs.&lt;/p&gt;
&lt;p&gt;This talk is for you, if you are looking to learn
generally accepted parallel patterns and start using them in your C++ code.
The talk will scale between 200 level and 400&amp;nbsp;level.&lt;/p&gt;
&lt;p&gt;Note: The talk will &lt;em&gt;not&lt;/em&gt; discuss C++ &lt;span class="caps"&gt;AMP&lt;/span&gt;, which deserves a full hour of its&amp;nbsp;own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Rahul V. Patil is a Lead Program Manager, in Microsoft’s C++ Parallel Computing team.
He started at Microsoft 8 years ago and has been a part
of the C++ concurrency runtime team since its&amp;nbsp;inception.&lt;/p&gt;
&lt;p&gt;About Rahul’s team: Parallel Computing team was founded 5 years ago
with the mission of bringing programming models and tools to developers,
so they may take advantage of the multi-cores and GPUs on the&amp;nbsp;machine.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/concurrency/bb964701"&gt;Microsoft &lt;span class="caps"&gt;MSDN&lt;/span&gt;&amp;nbsp;concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blogs.msdn.com/b/nativeconcurrency/"&gt;C++ &lt;span class="caps"&gt;PPL&lt;/span&gt; and &lt;span class="caps"&gt;AMP&lt;/span&gt;&amp;nbsp;blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;Watch the &lt;a class="reference external" href="http://vimeo.com/36917212"&gt;video&lt;/a&gt; of Rahul&amp;#8217;s talk
or read the &lt;a class="reference external" href="/static/talks/2012/parallel_talk_nwcpp_redux.pptx"&gt;slides&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 25th, 2012 — Finding Race Condition and Data Races Effectively — Madan Musuvathi</title><link href="http://nwcpp.org/january-2012.html" rel="alternate"></link><updated>2012-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2012-01-01:january-2012.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;January 25th, 2012 at 7:00 &lt;span class="caps"&gt;PM&lt;/span&gt;, Microsoft Campus.
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft+Building+43"&gt;Building 43/1540–Adams&lt;/a&gt;
(note room change).
This meeting was originally scheduled for Jan 18th but postponed due to&amp;nbsp;snow.&lt;/p&gt;
&lt;p&gt;Come at 6:30pm for pizza supplied by
&lt;a class="reference external" href="http://bit.ly/STBjobs"&gt;Microsoft Server and Tools&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;In this talk, I will describe two &lt;span class="caps"&gt;MSR&lt;/span&gt; tools,
Cuzz and DataCollider, for finding concurrency errors.
Cuzz uses a randomized algorithm to insert delays
in a concurrent program to force race conditions with probabilistic guarantees.
Cuzz is easy to use and is integrated with Microsoft’s Application Verifier.
DataCollider uses hardware facilities in interesting ways
to find data races with little runtime overhead.
While other data-race detection techniques incur a 1000% runtime overhead or more,
DataCollider incurs about 0 to 20%&amp;nbsp;overhead.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Madan Musuvathi is a Senior Researcher in the
&lt;a class="reference external" href="http://research.microsoft.com/groups/rise/"&gt;Research in Software Engineering&lt;/a&gt; group at
&lt;a class="reference external" href="http://research.microsoft.com/"&gt;Microsoft Research&lt;/a&gt;.
His research focus is on scalable analysis of concurrent systems.
More broadly, his interests include systems, program analysis, model checking,
verification, and theorem proving.
He also spends a lot of time at Microsoft
building analysis tools to improve the productivity of software developers and&amp;nbsp;testers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/35722387"&gt;Video&lt;/a&gt; |
&lt;a class="reference external" href="/static/talks/2012/nwcpp-2012-01-musuvathi-cuzz-datacollider.pptx"&gt;Slides&lt;/a&gt; |
&lt;a class="reference external" href="http://research.microsoft.com/pubs/118655/asplos277-pct.pdf"&gt;Cuzz paper&lt;/a&gt; |
&lt;a class="reference external" href="http://research.microsoft.com/pubs/139266/DataCollider%20-%20OSDI2010.pdf"&gt;DataCollider paper&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>December 2011: No Meeting</title><link href="http://nwcpp.org/december-2011.html" rel="alternate"></link><updated>2011-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2011-12-01:december-2011.html</id><summary type="html"></summary></entry><entry><title>November 16th, 2011 — Introduction to Scientific Computing — Robert Goddard</title><link href="http://nwcpp.org/november-2011.html" rel="alternate"></link><updated>2011-11-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-11-01:november-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30pm for pizza supplied by
&lt;a class="reference external" href="http://www.km.kongsberg.com/"&gt;Kongsberg Underwater Technology&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Computing in science and engineering involves modeling part of the physical world.
The inputs could be detailed measurements of the environment,
or a randomized set of potential measurements that might characterize some environment in the future.
The outputs could be images, or sound, or predictions of whether
a system will succeed or fail to perform its function,
or actions to make it more (or less) likely that some system will succeed.
The algorithms might involve solving a set of differential equations,
or integrating some function over a multi-dimensional domain,
or searching multi-dimensional parameter spaces to optimize some measure of quality or fit,
or sifting through noise to find a buried signal.
Speed requirements might be real-time (hard or soft), or much faster,
or just fast enough to fit into your project cost and schedule.
The answers must be accurate enough to accomplish the mission:
Personnel training, or performance prediction, or advance of scientific knowledge,
or control of a system or device, or life, or&amp;nbsp;death.&lt;/p&gt;
&lt;p&gt;Scientific computing typically involves a whole lot of arithmetic.
So, I will begin with a review of floating point arithmetic, specifically the &lt;span class="caps"&gt;IEEE&lt;/span&gt; 754 standard.
(You might be surprised at how much you thought you knew, but didn&amp;#8217;t.)
Then I will move on to &lt;span class="caps"&gt;R. W.&lt;/span&gt; Hamming&amp;#8217;s five main ideas about computation:
Emphasis on the purpose of the computation,
generalization of algorithms into families, roundoff error, truncation error,
and feedback (stability).
I hope to give enough practical information to help you avoid the most common problems
inherent in numerical computation,
and to point out resources that could help you go&amp;nbsp;further.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Robert Goddard is a physicist and software developer.
For the last 31 years, he has worked at the
Applied Physics Laboratory of the University of Washington,
mainly on computer modeling of underwater sound.
He is the architect and team leader for the Sonar Simulation Toolset (&lt;span class="caps"&gt;SST&lt;/span&gt;),
which produces simulated underwater sound,
suitable as input to sophisticated signal processing systems
(including human ears and brains),
based on user-specified descriptions of the undersea environment,
the listening system, and the sound sources and targets that might be out there.
He has also developed systems for control of measurement devices,
data analysis, visualization, modeling of quantum mechanical scattering,
and optimization of parameter values to fit&amp;nbsp;observations.&lt;/p&gt;
&lt;p&gt;Bob has been an active participant in &lt;span class="caps"&gt;NWCPP&lt;/span&gt; for most of its existence,
and is currently&amp;nbsp;Treasurer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/32281584"&gt;Video&lt;/a&gt; and
&lt;a class="reference external" href="/static/talks/2011/scientificcomputing.pdf"&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 19th, 2011 — Asynchronous Tasks in C++11 — Bartosz Milewski</title><link href="http://nwcpp.org/october-2011.html" rel="alternate"></link><updated>2011-10-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-10-01:october-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30 for pizza provided by
&lt;a class="reference external" href="http://www.summitgroupsolutions.com/"&gt;Summit Group Solutions, &lt;span class="caps"&gt;LLC&lt;/span&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;One of the goals of the new &lt;a class="reference external" href="http://en.wikipedia.org/wiki/C%2B%2B11"&gt;C++11 Standard&lt;/a&gt;
was to provide support for concurrency, in particular for thread-based concurrency.
But threads don’t scale very well.
Do C++ tasks, which are created using &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::async&lt;/span&gt;&lt;/tt&gt;, offer a scalable solution?
Can they implement task-based&amp;nbsp;parallelism?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz Milewski has a Ph.D. in Quantum Physics and many years of experience as a C++ programmer.
He worked at Microsoft on the Context Index—a search engine before the Internet—still an active part of Windows 7.
He designed the first distributed version control system,
&lt;a class="reference external" href="http://www.relisoft.com/co_op/"&gt;Code Co-op&lt;/a&gt; (before BitKeeper and Git).
Bartosz took part in the design of the &lt;a class="reference external" href="http://www.digitalmars.com/d/2.0/index.html"&gt;D language&lt;/a&gt;.
His main topics of interest are concurrent and distributed computing.
He works at Corensic, a Seattle startup that makes a concurrency bug detector,
&lt;a class="reference external" href="http://www.corensic.com/Products.aspx"&gt;Jinx&lt;/a&gt;.
He regularly publishes a blog at
&lt;a class="reference external" href="http://BartoszMilewski.wordpress.com"&gt;http://BartoszMilewski.wordpress.com&lt;/a&gt;
and a series of &lt;a class="reference external" href="http://www.corensic.com/Learn/Resources/ConcurrencyTutorialPartOne.aspx"&gt;C++11 Concurrency tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/asynctasksinc11.pptx"&gt;Slides&lt;/a&gt; and
&lt;a class="reference external" href="http://vimeo.com/30868784"&gt;video&lt;/a&gt; of Bartosz&amp;#8217;s&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 21st, 2011 — Beyond Threads — Rick Molloy</title><link href="http://nwcpp.org/september-2011.html" rel="alternate"></link><updated>2011-09-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-09-01:september-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30 for pizza provided by &lt;a class="reference external" href="http://www.amazon.com/"&gt;Amazon Digital&lt;/a&gt;!&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;A stroll through actor and task based programming using Visual&amp;nbsp;Studio.&lt;/p&gt;
&lt;p&gt;Developing concurrent applications and libraries is hard.
Making them robust and inherently scalable is even more challenging.
This talk will walk through a small handful of examples of using Microsoft&amp;#8217;s
&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/library/dd492627(VS.100).aspx"&gt;Agents&lt;/a&gt;
&lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;a class="reference external" href="http://msdn.microsoft.com/en-us/library/dd492418(VS.100).aspx"&gt;Parallel Pattern Library&lt;/a&gt;
that implement patterns from actor-based and dataflow programming.
An emphasis will be made on providing examples that are drawn from real situations
I&amp;#8217;ve encountered in code in the last few years
and how the patterns help resolve them,
rather than just providing a simple inventory of the&amp;nbsp;APIs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://parallelroads.wordpress.com/"&gt;Rick Molloy&lt;/a&gt; has worked at
Microsoft at various roles since 1999
and is currently working as a developer in the Startup Business Group.
Rick developed a passion for programing models while working on the Parallel Computing team and
contributing to Microsoft&amp;#8217;s Concurrency Runtime and C++ &lt;span class="caps"&gt;AMP&lt;/span&gt;
and a passion for performance when working on&amp;nbsp;Windows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/beyondthreads-rickmolloy-2011-09-21.pptx"&gt;Slides&lt;/a&gt;,
&lt;a class="reference external" href="/static/talks/2011/beyondthreads-code-rickmolloy-2011-09-21.zip"&gt;code&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.vimeo.com/29672551"&gt;video&lt;/a&gt; of Rick&amp;#8217;s&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 2011: No Meeting</title><link href="http://nwcpp.org/august-2011.html" rel="alternate"></link><updated>2011-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2011-08-01:august-2011.html</id><summary type="html"></summary></entry><entry><title>July 2011: No Meeting</title><link href="http://nwcpp.org/july-2011.html" rel="alternate"></link><updated>2011-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2011-07-01:july-2011.html</id><summary type="html"></summary></entry><entry><title>How to Sponsor NWCPP</title><link href="http://nwcpp.org/sponsors-howto.html" rel="alternate"></link><updated>2011-06-13T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-06-13:sponsors-howto.html</id><summary type="html">&lt;p&gt;Several companies have chosen to sponsor our monthly meetings.
Often these companies supply free pizza for the meeting.
Other companies may choose to give away&amp;nbsp;products.&lt;/p&gt;
&lt;p&gt;If you sponsor us, we will add a brief mention on the front page which
links to our &lt;a class="reference external" href="http://nwcpp.org/sponsors.html"&gt;sponsorship page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;NWCPP&lt;/span&gt; welcomes your sponsorship, subject to the following&amp;nbsp;guidelines.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Donations to get onto the sponsor page must be at least $50 in&amp;nbsp;value.&lt;/li&gt;
&lt;li&gt;All contributions must go to one or more members of our organization;
no equipment or assets will be held at this time by the organization&amp;nbsp;itself.&lt;/li&gt;
&lt;li&gt;In those cases where specific items are being given away,
the recipient of those items must be determined by a drawing
from all those wishing to participate.
The drawing must be open to everyone and free to enter.
You may collect business cards or email addresses.
Board members of &lt;span class="caps"&gt;NWCPP&lt;/span&gt; are not eligible to enter the&amp;nbsp;drawings.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;NWCPP&lt;/span&gt; maintains a separate web page for sponsorship postings.
Each month we will add the latest sponsors to the top of the page,
and remove the postings that are 1+ years&amp;nbsp;old.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class="caps"&gt;NWCPP&lt;/span&gt; is a 501(c)3 organization. Our &lt;span class="caps"&gt;EIN&lt;/span&gt; is &lt;strong&gt;91-1718733&lt;/strong&gt;.&lt;/p&gt;
</summary></entry><entry><title>June 15th, 2011 — Avoiding Over and Under Design — Alan Shalloway</title><link href="http://nwcpp.org/june-2011.html" rel="alternate"></link><updated>2011-06-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-06-01:june-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30pm for the pizza provided by &lt;a class="reference external" href="http://www.corensic.com/"&gt;Corensic&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;The question of how much design to do up-front on a project is an engaging one.
Too much design often results in overkill, complexity, and wasted work.
Too little design results in insufficient system structures
that require rework, additional complexity, and wasted effort.
How can we know what the right balance is?
Alan Shalloway shows how to use the advice from Design Patterns
coupled with the attitude of not building what you don’t need from Agile.
The trick is in discovering what you don’t know, how it may affect you,
and then how to isolate these risks in your code in a simple manner.
Alan describes the essence of emergent design
– that is, starting with a simple design and letting it evolve as the requirements evolve.
He also demonstrates how to refactor to better designs
and how this is different from refactoring bad&amp;nbsp;code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Alan&amp;nbsp;Shalloway&lt;/strong&gt; is the founder and &lt;span class="caps"&gt;CEO&lt;/span&gt; of &lt;a class="reference external" href="http://www.netobjectives.com/"&gt;Net Objectives&lt;/a&gt;.
With over 40 years of experience, Alan is an industry thought leader
in Lean, Kanban, Scrum and design patterns.
He helps companies transition to Lean and Agile methods enterprise-wide
as well teaches courses in these areas.
Alan has developed training and coaching methods for Lean-Agile
that have helped his clients achieve long-term, sustainable productivity gains.
He is a popular speaker at prestigious conferences worldwide.
He is the primary author of
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/design-patterns-explained"&gt;Design Patterns Explained: A New Perspective on Object-Oriented Design&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-pocket-guide-scrum-teams"&gt;Lean-Agile Pocket Guide for Scrum Teams&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-software-development"&gt;Lean-Agile Software Development: Achieving Enterprise Agility&lt;/a&gt;,
and is currently writing
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/essential-skills-agile-developers"&gt;Essential Skills for the Agile Developer&lt;/a&gt;.
Alan has worked in literally dozens of industries over his career.
He is a co-founder and board member for the
&lt;a class="reference external" href="http://www.leanssc.org/"&gt;Lean Software and Systems Consortium&lt;/a&gt;.
He has a Masters in Computer Science from &lt;span class="caps"&gt;M.I.T.
&lt;/span&gt;as well as a Masters in Mathematics from Emory University.
You can follow Alan on Twitter,
&lt;a class="reference external" href="http://twitter.com/alshalloway"&gt;&amp;#64;alshalloway&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/avoidingoverandunderdesigncpp.pdf"&gt;Slides&lt;/a&gt;
and &lt;a class="reference external" href="http://vimeo.com/25209064"&gt;video&lt;/a&gt; of Alan&amp;#8217;s&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>May 18th, 2011 — C++0x Lambda Functions — Herb Sutter</title><link href="http://nwcpp.org/may-2011.html" rel="alternate"></link><updated>2011-05-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-05-01:may-2011.html</id><summary type="html">&lt;p&gt;The Northwest C++ Users Group&amp;#8217; would like to extend a very special
welcome to Herb Sutter as the speaker for the May 2011&amp;nbsp;meeting.&lt;/p&gt;
&lt;p&gt;Come at 6:30 for &lt;em&gt;pizza&lt;/em&gt; provided by
&lt;a class="reference external" href="http://http//www.corensic.com//"&gt;Corensic&lt;/a&gt;!&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Why care about &lt;a class="reference external" href="http://en.wikipedia.org/wiki/C%2B%2B0x#Lambda_functions_and_expressions"&gt;C++0x lambda functions&lt;/a&gt;?
Syntactically, they are nothing but sugar for function objects.
However, they are an essential and enabling sugar that will change the way
we will write C++ code more often than most people&amp;nbsp;realize.&lt;/p&gt;
&lt;p&gt;This talk will cover what lambda functions are and how to use them effectively,
including how lambdas touch many wide-ranging kinds of code
— from their convenience when writing concurrent and scalable parallel code,
to how they stand to revolutionize &lt;span class="caps"&gt;STL&lt;/span&gt; usability and programming,
to how they enable such small conveniences as local functions and local variable&amp;nbsp;initialization.&lt;/p&gt;
&lt;p&gt;Note that lambda functions, although futuristic, are not a far-future feature.
They are available today in several shipping C++ compilers,
including Intel C++ 11, Microsoft Visual Studio 2010, and gcc 4.5.
The future is now.
Come find out how this powerful feature affects you and your&amp;nbsp;code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Herb_Sutter"&gt;Herb Sutter&lt;/a&gt;
is the chair of the &lt;span class="caps"&gt;ISO&lt;/span&gt; C++ committee.
He is responsible for the design of lambda functions in Visual C++ 2010
and their integration in the Parallel Patterns Library.
He is partly responsible for the design of lambda functions in the C++0x standard,
notably capture defaults and final&amp;nbsp;syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/lambda.pdf"&gt;Slides&lt;/a&gt; and
&lt;a class="reference external" href="http://vimeo.com/23975522"&gt;video&lt;/a&gt; of Herb&amp;#8217;s standing-room-only&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 20th, 2011: ‘C’ for Microcontrollers, Just Being Efficient — Lloyd Moore</title><link href="http://nwcpp.org/april-2011.html" rel="alternate"></link><updated>2011-04-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-04-01:april-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30 for pizza provided by Amazon&amp;nbsp;Digital!&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microcontrollers represent a highly resource constrained environment.
Very small microcontrollers typically have only several &lt;span class="caps"&gt;KB&lt;/span&gt; of program space available
and several hundred bytes of memory, in addition to very low clock speeds.
This talk will look at how to address these resource limitations.
Many of the techniques examined also apply to larger / &lt;span class="caps"&gt;PC&lt;/span&gt; class hardware,
and can be used to improve the performance for those systems.
In addition the techniques explored are also beneficial
for optimizing the power consumption of mobile devices and&amp;nbsp;applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Lloyd Moore&lt;/strong&gt; is the founder and owner of
&lt;a class="reference external" href="http://www.CyberData-Robotics.com"&gt;CyberData Corporation&lt;/a&gt;,
which provides consulting services in the robotics and industrial automation field.
Lloyd has worked in software industry for 25 years,
with his formal training in biological based artificial intelligence, electronics, and&amp;nbsp;psychology.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/c%20for%20microcontrollers.ppt"&gt;Slides&lt;/a&gt; and
&lt;a class="reference external" href="http://vimeo.com/nwcpp/april2011"&gt;video&lt;/a&gt; of Lloyd&amp;#8217;s&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 16th, 2011 — Debuggers and Mago — Aldo Nunez</title><link href="http://nwcpp.org/march-2011.html" rel="alternate"></link><updated>2011-03-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-03-01:march-2011.html</id><summary type="html">&lt;p&gt;Come at 6:30pm to socialize and eat pizza provided by
&lt;a class="reference external" href="http://www.summitgroupsolutions.com/"&gt;Summit Group Solutions&lt;/a&gt;!&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Debuggers are an important tool for helping software engineers
get to the root of certain problems.
&lt;a class="reference external" href="http://dsource.org/projects/mago_debugger"&gt;Mago&lt;/a&gt;
is a graphical debugger dedicated to the
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/D_(programming_language)"&gt;D programming language&lt;/a&gt;
on Windows.
It is made up of several independent libraries that can be used
for other purposes such as tracing and code&amp;nbsp;analysis.&lt;/p&gt;
&lt;p&gt;In this talk, we&amp;#8217;ll cover the process of debugging in general,
specifics on Windows, and details about Mago&amp;#8217;s connection to&amp;nbsp;D.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Aldo Nunez has worked on embedded software since
graduating with a &lt;span class="caps"&gt;B.A.&lt;/span&gt; in Computer Science from New York University in 2001.
He first programmed &lt;span class="caps"&gt;BASIC&lt;/span&gt; on the VTech PreComputer 1000,
and is interested in programming language tools and video&amp;nbsp;games.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;Aldo&amp;#8217;s &lt;a class="reference external" href="/static/talks/2011/mago%20debugger%20inner%20workings.pptx"&gt;slides&lt;/a&gt;.
Video, &lt;a class="reference external" href="http://vimeo.com/21323893"&gt;Part I&lt;/a&gt; and &lt;a class="reference external" href="http://vimeo.com/21605995"&gt;Part &lt;span class="caps"&gt;II&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 16th, 2011 — The Thought Process of Patterns: Essential Design Skills — Alan Shalloway</title><link href="http://nwcpp.org/february-2011.html" rel="alternate"></link><updated>2011-02-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-02-01:february-2011.html</id><summary type="html">&lt;p&gt;Pizza will be supplied by &lt;a class="reference external" href="http://www.netobjectives.com/"&gt;Net&amp;nbsp;Objectives&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Patterns have been known as “Solutions to Recurring Problems in&amp;nbsp; a Context.”
However, they are really more than just that.
In fact, Christopher Alexander, the inspirer of design patterns in general and
the author of this quote later says at the end of his book
– “At this final stage, the patterns are no longer important:
the patterns have taught you to be receptive to what is real.”
This talk is about the thought process of patterns – what to be receptive to.
These concepts will be discussed&amp;nbsp;in the context of emerging application architectures
and so will be of particular interest to agile developers.
However, these concepts are equally important to creating designs that are to endure,
regardless of the methodology&amp;nbsp;involved.&lt;/p&gt;
&lt;p&gt;The lessons learned will be taken from Net Objectives’ upcoming book
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/essential-skills-agile-developers"&gt;Essential Skills for the Agile Developer&lt;/a&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Programming by&amp;nbsp;Intention&lt;/li&gt;
&lt;li&gt;Separating Use from&amp;nbsp;Construction&lt;/li&gt;
&lt;li&gt;Define tests Up&amp;nbsp;Front&lt;/li&gt;
&lt;li&gt;Shalloway’s&amp;nbsp;Law&lt;/li&gt;
&lt;li&gt;Encapsulate&amp;nbsp;That&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attendees will learn a new respect for design patterns
and how they are more useful today than ever&amp;nbsp;before.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Alan&amp;nbsp;Shalloway&lt;/strong&gt; is the founder and &lt;span class="caps"&gt;CEO&lt;/span&gt; of &lt;a class="reference external" href="http://www.netobjectives.com/"&gt;Net Objectives&lt;/a&gt;.
With over 40 years of experience, Alan is an industry thought leader
in Lean, Kanban, Scrum and design patterns.
He helps companies transition to Lean and Agile methods enterprise-wide
as well teaches courses in these areas.
Alan has developed training and coaching methods for Lean-Agile
that have helped his clients achieve long-term, sustainable productivity gains.
He is a popular speaker at prestigious conferences worldwide.
He is the primary author of
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/design-patterns-explained"&gt;Design Patterns Explained: A New Perspective on Object-Oriented Design&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-pocket-guide-scrum-teams"&gt;Lean-Agile Pocket Guide for Scrum Teams&lt;/a&gt;,
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/lean-agile-software-development"&gt;Lean-Agile Software Development: Achieving Enterprise Agility&lt;/a&gt;,
and is currently writing
&lt;a class="reference external" href="http://www.netobjectives.com/resources/books/essential-skills-agile-developers"&gt;Essential Skills for the Agile Developer&lt;/a&gt;.
Alan has worked in literally dozens of industries over his career.
He is a co-founder and board member for the
&lt;a class="reference external" href="http://www.leanssc.org/"&gt;Lean Software and Systems Consortium&lt;/a&gt;.
He has a Masters in Computer Science from &lt;span class="caps"&gt;M.I.T.
&lt;/span&gt;as well as a Masters in Mathematics from Emory University.
You can follow Alan on Twitter,
&lt;a class="reference external" href="http://twitter.com/alshalloway"&gt;&amp;#64;alshalloway&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 19th, 2011 — Determinism and Fail-Stop Races for Sane Multiprocessing — Luis Ceze</title><link href="http://nwcpp.org/january-2011.html" rel="alternate"></link><updated>2011-01-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2011-01-01:january-2011.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Current multicore systems are nondeterministic.
Each time they execute a multithreaded application, even if supplied with the same input,
they can produce a different output.
This frustrates debugging, limits the ability to properly test multithreaded code
and hinders fault-tolerant scenarios.
Moreover, data-races often lead to surprising behavior
and complicate the semantics of programming&amp;nbsp;languages.&lt;/p&gt;
&lt;p&gt;In this talk, I will argue that nondeterminism should be kept at a minimum
both during development as well as in the field,
making the benefits of deterministic execution go beyond debugging.
I will also argue that concurrency errors should be treated as exceptions,
have fail-stop behavior and precise semantics.
I will present our work on fully deterministic shared memory multiprocessing (&lt;span class="caps"&gt;DMP&lt;/span&gt;),
exploring multiple deterministic execution strategies
with different performance, complexity and scalability trade-offs.
I will also present some of our work on architecture support
for fail-stop behavior of data-races.
I will end the talk with a brief overview of our efforts
in complex concurrency bug detection and&amp;nbsp;avoidance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.cs.washington.edu/homes/luisceze/"&gt;Luis Ceze&lt;/a&gt;
is an Assistant Professor in the Computer Science and Engineering Department
at the University of Washington.
His research focuses on computer architecture, compiler, programming models and &lt;span class="caps"&gt;OS&lt;/span&gt;
to improve the programmability, reliability and energy efficiency of multiprocessor systems.
He has co-authored over 40 papers in these areas,
and had several papers selected as &lt;span class="caps"&gt;IEEE&lt;/span&gt; Micro Top Picks and &lt;span class="caps"&gt;CACM&lt;/span&gt; research Highlights.
He participated in the Blue Gene, Cyclops, and &lt;span class="caps"&gt;PERCS&lt;/span&gt; projects at &lt;span class="caps"&gt;IBM&lt;/span&gt;
and is a recipient of several &lt;span class="caps"&gt;IBM&lt;/span&gt; awards.
He is also a recipient of an &lt;span class="caps"&gt;NSF&lt;/span&gt; &lt;span class="caps"&gt;CAREER&lt;/span&gt; Award, a Sloan Research Fellowship,
and a Microsoft Research Faculty Fellowship.
He co-founded Corensic, a &lt;span class="caps"&gt;UW&lt;/span&gt;-&lt;span class="caps"&gt;CSE&lt;/span&gt; spin-off company, where he is a part-time&amp;nbsp;consultant.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2011/nwcpp-jan2011.pdf"&gt;Slides&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>December 2010: No Meeting</title><link href="http://nwcpp.org/december-2010.html" rel="alternate"></link><updated>2010-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2010-12-01:december-2010.html</id><summary type="html"></summary></entry><entry><title>November 17th, 2010 — Bartosz Milewski — C++ vs. Haskell: Type Classes vs. Concepts</title><link href="http://nwcpp.org/november-2010.html" rel="alternate"></link><updated>2010-11-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-11-01:november-2010.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Concepts_(C%2B%2B)"&gt;C++ Concepts&lt;/a&gt;
got a lot of bad press and were dropped from
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/C%2B%2B0x"&gt;C++0x&lt;/a&gt;.
They were considered too complex with too few benefits.
And yet their equivalent in Haskell,
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Type_class"&gt;type classes&lt;/a&gt;,
are considered simple and powerful.
I will talk about both languages, explaining some Haskell and C++ concept syntax as I go.
I&amp;#8217;ll give examples of problems that type classes solve and C++ concepts could have solved.
I&amp;#8217;ll show you the hair-raising forensics of a C++ &lt;span class="caps"&gt;ADL&lt;/span&gt;
(Argument-Dependent Lookup) mishap that could have been avoided by using&amp;nbsp;concepts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz Milewski has a Ph.D. in High-Energy Physics
and many years of experience as a C++ programmer.
He worked at Microsoft on the Context Index—a search engine before the Internet,
still an active part of Windows 7.
He designed the first distributed version control system,
&lt;a class="reference external" href="http://www.relisoft.com/co_op/"&gt;Code Co-op&lt;/a&gt;
(before BitKeeper and Git).
Bartosz took part in the design of the
&lt;a class="reference external" href="http://www.digitalmars.com/d/"&gt;D language&lt;/a&gt;.
His main topics of interest are concurrent and distributed computing and language design.
He regularly publishes a blog at
&lt;a class="reference external" href="http://BartoszMilewski.wordpress.com"&gt;http://BartoszMilewski.wordpress.com&lt;/a&gt;.
You may see him occasionally at &lt;span class="caps"&gt;CSE&lt;/span&gt; 950 P at the&amp;nbsp;&lt;span class="caps"&gt;UW&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://bartoszmilewski.wordpress.com/2010/11/29/understanding-c-concepts-through-haskell-type-classes/"&gt;Video&lt;/a&gt;
of the&amp;nbsp;presentation.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 20th, 2010 — Steve Yegge — Scaling and Standardizing Programming Language Analysis at Google</title><link href="http://nwcpp.org/october-2010.html" rel="alternate"></link><updated>2010-10-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-10-01:october-2010.html</id><summary type="html">&lt;p&gt;Wednesday, October 20, 2010, at 7pm. 41/1511, Microsoft.
Come early to socialize and eat&amp;nbsp;pizza.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Modern IDEs and compilers generate a wealth of information,
and you can&amp;#8217;t have any of it.
Tools in the compiler family — even the best IDEs — tend to be monolithic, language-specific,
generally non-scalable special-purpose applications.
Even when they do support headless analysis, none of them do it the same way,
and very few of them can do cross-language analysis.
At Google, I&amp;#8217;ve put together a team with the long-term goal of addressing these problems
in a general way.
We&amp;#8217;ve built infrastructure to run &lt;span class="caps"&gt;IDE&lt;/span&gt;-quality code analyzers such
as &lt;a class="reference external" href="http://www.eclipse.org/"&gt;Eclipse&lt;/a&gt; and &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Clang"&gt;clang&lt;/a&gt;
over Google&amp;#8217;s entire corpus and all open-source code.
We translate the intermediate representations into a language-neutral index,
then serve the index data back through language-neutral APIs and query interfaces.
In this talk I&amp;#8217;ll share what we&amp;#8217;ve done so far,
then about our longer-term plans for an open&amp;nbsp;platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://steve-yegge.blogspot.com/"&gt;Steve Yegge&lt;/a&gt; graduated
from the University of Washington with a &lt;span class="caps"&gt;B.S.&lt;/span&gt; in Computer Science.
He spent five years as a developer and team lead at Geoworks,
several years at various startups,
and then more than six years at Amazon.com as a Senior Development Manager.
He joined Google in 2005 and is a Staff Software Engineer in the Kirkland office,
currently working on scaling language analysis.
Steve lives in downtown Kirkland with his lovely wife Linh and their faithful furry sidekick&amp;nbsp;Cino.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/16069687"&gt;Video&lt;/a&gt; of Steve&amp;#8217;s&amp;nbsp;talk.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 15th, 2010 — The Many Faces of D — Walter Bright</title><link href="http://nwcpp.org/september-2010.html" rel="alternate"></link><updated>2010-09-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-09-01:september-2010.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;There are many mainstream programming paradigms —
imperative, object oriented, meta, functional, etc.
Each has their proponents and languages oriented around it.
But larger applications tend to not fit easily into any particular&amp;nbsp;paradigm.&lt;/p&gt;
&lt;p&gt;In extreme cases, developers will resort to using multiple languages
with an uneasy interface between them.
The &lt;a class="reference external" href="http://www.digitalmars.com/d/index.html"&gt;D programming language&lt;/a&gt;
takes a different approach, offering multiple programming paradigms within one language,
making it easy to select the most suitable paradigm for each task within the&amp;nbsp;application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.walterbright.com/"&gt;Walter Bright&lt;/a&gt; graduated from Caltech in 1979
with a degree in mechanical engineering.
He worked for Boeing for 3 years on the development of the 757 stabilizer trim system.
He then switched to writing software, in particular compilers,
and has been writing them ever&amp;nbsp;since.&lt;/p&gt;
&lt;p&gt;There will be door prizes—3 copies of Andrei Alexandrescu&amp;#8217;s book,
&lt;a class="reference external" href="http://www.amazon.com/D-Programming-Language-Andrei-Alexandrescu/dp/0321635361/"&gt;The D Programming Language&lt;/a&gt;—plus light&amp;nbsp;refreshments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;Here are &lt;a class="reference external" href="/static/talks/2010/nwcpp-2010-09.pdf"&gt;Walter&amp;#8217;s slides&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 2010: No Meeting</title><link href="http://nwcpp.org/august-2010.html" rel="alternate"></link><updated>2010-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2010-08-01:august-2010.html</id><summary type="html"></summary></entry><entry><title>July 2010: No Meeting</title><link href="http://nwcpp.org/july-2010.html" rel="alternate"></link><updated>2010-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2010-07-01:july-2010.html</id><summary type="html"></summary></entry><entry><title>June 16th, 2010 — Massive Multithreading on the GPU — Gavriel Plotke</title><link href="http://nwcpp.org/june-2010.html" rel="alternate"></link><updated>2010-06-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-06-01:june-2010.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;GigaFlops or… TerraFlops?
The modern &lt;span class="caps"&gt;GPU&lt;/span&gt; is a massively parallel supercomputer
that has 2 orders of magnitude more processing power than a single &lt;span class="caps"&gt;CPU&lt;/span&gt; Core.
But the threading model is very different than the &lt;span class="caps"&gt;CPU&lt;/span&gt;.
Don’t get left behind on knowing about this different&amp;nbsp;paradigm.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Gavriel Plotke, Microsoft Senior &lt;span class="caps"&gt;SDET&lt;/span&gt;.
I&amp;#8217;ve been with Microsoft for 3 years on the DirectX High Level Shader Language compiler test team.
I’ve been a champion of the new Compute Shader features of DirectX11.
While I have some graphics background,
it was my assembler language and compiler writing background that got me the job.
Early in my career I worked on the internals of
a mainframe spreadsheet product as a competitor to VisiCalc and Lotus123.
It was a time when everyone in a big office would have a mainframe terminal and
no one had a &lt;span class="caps"&gt;PC&lt;/span&gt;.
It was a great product, but time moved on, and Excel on inexpensive PCs ate our lunch.
After that I spent many years doing business contract work
— different projects, different platforms, lots of database design.
Now I help support programming on today’s supercomputer, the modern graphics&amp;nbsp;card.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>May 19th, 2010 — The Anatomy of Message Passing — Bartosz Milewski</title><link href="http://nwcpp.org/may-2010.html" rel="alternate"></link><updated>2010-05-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-05-01:may-2010.html</id><summary type="html">&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;The message passing paradigm makes multithreaded programming safer.
In this talk I&amp;#8217;ll be trying to get to the bottom of message passing&amp;#8212;
finding low level primitives from which a variety of message queues or
mailboxes may be built.
I&amp;#8217;ll make a few digressions into Haskell&amp;#8217;s MVars and OCaml&amp;#8217;s channels,
but mainly I&amp;#8217;ll talk about C++.
I&amp;#8217;ll show you how to separate synchronization from message storage
for a composable and type-safe&amp;nbsp;system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;m one part physicist, one part software engineer, and one part computer scientist.
I have a Ph.D. in Theoretical Physics;
I worked for Microsoft and for my own company, Reliable Software;
and I frequent graduate seminars in programming languages at the University of Washington.
I also keep a blog at
&lt;a class="reference external" href="http://BartoszMilewski.wordpress.com"&gt;http://BartoszMilewski.wordpress.com&lt;/a&gt;,
mostly about concurrent&amp;nbsp;programming.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 21st, 2010 — New C++0x Features in Visual Studio 2010 — Mark Roberts</title><link href="http://nwcpp.org/april-2010.html" rel="alternate"></link><updated>2010-04-01T00:00:00-07:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-04-01:april-2010.html</id><summary type="html">&lt;p&gt;On Wednesday, April 21st, 2010 at 7pm, Mark Roberts from Microsoft will
talk about new C++0x features implemented in Visual&amp;nbsp;Studio&amp;nbsp;2010.&lt;/p&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Why wait for the C++ committee to finish the specification when you can
enjoy much of the power of C++0x today!
C++0x, the next C++ standard, is almost upon us
and it contains the most important updates to the language since the mid-90s.
It even accepts the existence of multiple threads for the first time in the language’s history.
Needless to say, these new features bring more expressiveness and power to the native C++ developer.
Visual Studio 2010 has added support for some of these key features
in order to enable these modern programming techniques.
This talk will clarify what features are in Visual C++ 2010 and what is yet to come.
It will illustrate how new constructs such as lambda expressions
enable better use of existing libraries
and how your code can be simpler, safer and faster all at the same time.
If you are itching to show off how C++ is one of the coolest languages on the planet,
this talk is for&amp;nbsp;you!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Mark Roberts is a program manager on the Microsoft Visual C++ compiler team.
He has worked on various aspects of the C++ development experience
over the past 3 years, including the debugger and &lt;span class="caps"&gt;IDE&lt;/span&gt;.
He is currently focused on implementing new language features in the C++ compiler
while enhancing the accuracy and performance of&amp;nbsp;intellisense.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 17th, 2010 — Short Talks on Concurrency</title><link href="http://nwcpp.org/march-2010.html" rel="alternate"></link><updated>2010-03-01T00:00:00-08:00</updated><author><name>George Reilly</name></author><id>tag:nwcpp.org,2010-03-01:march-2010.html</id><summary type="html">&lt;div class="section" id="time-and-location"&gt;
&lt;h2&gt;Time and&amp;nbsp;Location&lt;/h2&gt;
&lt;p&gt;Wednesday, March 17th, 2010 at
&lt;a class="reference external" href="http://www.bing.com/maps/?v=2&amp;amp;where1=Microsoft%20Building%2040,%20WA&amp;amp;encType=1"&gt;Building 40/1450&lt;/a&gt;
(Steptoe), One Microsoft Way, Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052, at&amp;nbsp;7pm.&lt;/p&gt;
&lt;p&gt;Three short talks on Concurrency from
Bartosz Milewski, George Reilly, and Max&amp;nbsp;Wilson.&lt;/p&gt;
&lt;div class="section" id="tasks-vs-sparks-comparing-ms-task-parallel-library-with-multicore-haskell-bartosz-milewski"&gt;
&lt;h3&gt;Tasks vs. Sparks, comparing &lt;span class="caps"&gt;MS&lt;/span&gt; Task Parallel Library with Multicore Haskell — Bartosz&amp;nbsp;Milewski&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft
&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/magazine/cc163340.aspx"&gt;&lt;span class="caps"&gt;TPS&lt;/span&gt;&lt;/a&gt; is a
.&lt;span class="caps"&gt;NET&lt;/span&gt; library that allows the programmer to parallelize fragments of
code. Haskell support for parallelization goes deeper into the runtime.
Of course these are apples and oranges;
Haskell is a functional language, &lt;span class="caps"&gt;TPS&lt;/span&gt; is mostly used from C#.
But the implementation details are similar (both projects come from Microsoft&amp;nbsp;Research).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://bartoszmilewski.wordpress.com/"&gt;Bartosz Milewski&lt;/a&gt; is the
president of the &lt;span class="caps"&gt;NWCPP&lt;/span&gt; and has spoken many&amp;nbsp;times.&lt;/p&gt;
&lt;div class="section" id="read-mostly-data-structures-george-v-reilly"&gt;
&lt;h3&gt;Read-Mostly Data Structures — George V.&amp;nbsp;Reilly&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;When shared data is read frequently, but seldom modified,
the lock can become a bottleneck.
Callers are serialized on the lock and the memory underlying the lock
sloshes between different processor caches.
Since the data is rarely modified,
it seems like we should be able to read it without taking a lock at all.
This talk presents a safe, lock-free way to access shared&amp;nbsp;data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.georgevreilly.com/"&gt;George Reilly&lt;/a&gt; has developed
software since the 1980s, working in television, graphics, operating
systems, editors, advertising, and Web 2.0.
He became fascinated with concurrency during the seven years
he spent on the Internet Information Services development team at Microsoft,
where he concentrated on performance.
He now works for &lt;a class="reference external" href="http://www.cozi.com/"&gt;Cozi&lt;/a&gt;,
a small company in Seattle&amp;#8217;s Pioneer Square,
which just won the &lt;span class="caps"&gt;WTIA&lt;/span&gt;&amp;#8217;s Consumer Product of the Year award
for its software that simplifies family&amp;nbsp;life.&lt;/p&gt;
&lt;div class="section" id="futures-in-c-max-wilson"&gt;
&lt;h3&gt;Futures in C++ — Max&amp;nbsp;Wilson&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;the new C++0x standard requires support for
&lt;a class="reference external" href="http://bartoszmilewski.wordpress.com/2009/03/03/broken-promises-c0x-futures/"&gt;“futures.”&lt;/a&gt;
In general, “futures” are a programming language abstraction for data
that will be produced asynchronously by other threads. We will discuss
the conceptual benefits to programming with futures vs. other
synchronization mechanisms, and show which techniques can be used in C++
and how they make concurrent APIs easier to&amp;nbsp;consume.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Max Wilson is a bit of a language geek, and is a developer on Microsoft’s
&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/netframework/aa663324.aspx"&gt;&lt;span class="caps"&gt;WCF&lt;/span&gt;&lt;/a&gt; team.
Other than that he is a totally normal&amp;nbsp;guy.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 2010: No Meeting</title><link href="http://nwcpp.org/february-2010.html" rel="alternate"></link><updated>2010-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2010-02-01:february-2010.html</id><summary type="html"></summary></entry><entry><title>January 2010: No Meeting</title><link href="http://nwcpp.org/january-2010.html" rel="alternate"></link><updated>2010-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2010-01-01:january-2010.html</id><summary type="html"></summary></entry><entry><title>December 10th, 2003 — The Future of C++ on .NET: A Tour of C++/CLI — Herb Sutter</title><link href="http://nwcpp.org/december-2003.html" rel="alternate"></link><updated>2003-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-12-01:december-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Microsoft Corporation&lt;/div&gt;
&lt;div class="line"&gt;Building 27, Conference Room 1810 (Olympic)&lt;/div&gt;
&lt;div class="line"&gt;One Microsoft Way&lt;/div&gt;
&lt;div class="line"&gt;Redmond, Washington 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;In October 2003, a new &lt;span class="caps"&gt;ECMA&lt;/span&gt; standards committee was formed to create an
international standard for &amp;#8220;C++/&lt;span class="caps"&gt;CLI&lt;/span&gt;,&amp;#8221; a set of C++ extensions for .&lt;span class="caps"&gt;NET&lt;/span&gt;
programming designed by Microsoft in collaboration with C++ industry
leaders as a successor to &amp;#8220;Managed C++.&amp;#8221;
Formally, C++/&lt;span class="caps"&gt;CLI&lt;/span&gt; is a binding between &lt;span class="caps"&gt;ISO&lt;/span&gt; C++ and &lt;span class="caps"&gt;ISO&lt;/span&gt; &lt;span class="caps"&gt;CLI&lt;/span&gt;
(Common Language Infrastructure, the standardized subset of
the .&lt;span class="caps"&gt;NET&lt;/span&gt; runtime environment and frameworks class library);
see the announcement at
&lt;a class="reference external" href="http://www.ecma-international.org/news/ecma-TG5-PR.htm"&gt;www.ecma-international.org/news/ecma-&lt;span class="caps"&gt;TG5&lt;/span&gt;-&lt;span class="caps"&gt;PR&lt;/span&gt;.htm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this talk, the lead architect of C++/&lt;span class="caps"&gt;CLI&lt;/span&gt; talks about the language
design and major features, with a look under the hood at how compilers
are implementing the new semantics. C++/&lt;span class="caps"&gt;CLI&lt;/span&gt; provides first-class and
cleanly integrated support in the C++ language for all .&lt;span class="caps"&gt;NET&lt;/span&gt; features
(e.g., properties and events, garbage collection and generics) uniformly
for all types including also for native types. It also provides
first-class support on the .&lt;span class="caps"&gt;NET&lt;/span&gt; platform for all standard C++ features
(e.g., deterministic destruction and templates) uniformly for all types,
including also for .&lt;span class="caps"&gt;NET&lt;/span&gt; types. These facilities are expressed through a
set of pure conforming extensions, underpinned by a unified type system
and unified pointer/storage&amp;nbsp;system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Herb Sutter&lt;/strong&gt;
is a leading authority on C++ software development.
Author of more than
180 &lt;a class="reference external" href="http://www.gotw.ca/publications/index.htm"&gt;technical articles and papers&lt;/a&gt;
and of the widely acclaimed books
&lt;a class="reference external" href="http://www.gotw.ca/publications/xc++.htm"&gt;Exceptional C++&lt;/a&gt;
and &lt;a class="reference external" href="http://www.gotw.ca/publications/mxc++.htm"&gt;More Exceptional C++&lt;/a&gt;,
he regularly gives invited talks at conferences around the world
and is available for
private &lt;a class="reference external" href="http://www.gotw.ca/consulting.htm"&gt;training and mentoring&lt;/a&gt;
for new and current corporate&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;Please note that in order to accommodate the increased attendance, this
meeting will be held at the &lt;strong&gt;Microsoft Corporation&lt;/strong&gt; rather than our
usual meeting at&amp;nbsp;Avaya.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2003/HerbSutterCLI.pdf"&gt;Click here&lt;/a&gt;
to download the source code and slides from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>November 10th, 2003 — The Future of C++: A Panel Discussion with the Experts — Andrei Alexandrescu, Scott Meyers, &amp; Herb Sutter</title><link href="http://nwcpp.org/november-2003.html" rel="alternate"></link><updated>2003-11-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-11-01:november-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.overlakehospital.org/conferencecenter/fs.htm"&gt;Overlake Hospital Conference Center&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;1035 116th Ave &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Bellevue, Washington, 98004&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Please note that in order to offset some of the costs necessary to host
this meeting, there will be a &lt;strong&gt;$10 charge to non-&lt;span class="caps"&gt;NWCPP&lt;/span&gt; and non-&lt;span class="caps"&gt;WSA&lt;/span&gt; members&lt;/strong&gt;.
Membership in the &lt;span class="caps"&gt;NWCPP&lt;/span&gt; is &lt;strong&gt;free&lt;/strong&gt;, and is a great way to
ensure that you may attend this meeting for free.
To become a member, visit the &lt;a class="reference external" href="../../Membership/index.html"&gt;Membership&lt;/a&gt; page
and join our mailing list.
&lt;strong&gt;Only members on the &lt;span class="caps"&gt;NWCPP&lt;/span&gt; mailing list and &lt;span class="caps"&gt;WSA&lt;/span&gt; members may attend the meeting for&amp;nbsp;free!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This meeting is a great opportunity to pick the minds of some of the
most well-known experts in the C++ community!
The meeting will be a moderated panel discussion and the three experts
will be open to questions from the audience regarding the current state of
the C++ language and the direction in which it is forging ahead.
This is a unique opportunity, and we hope that you can be a part of&amp;nbsp;it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bios"&gt;
&lt;h2&gt;Bios&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Andrei Alexandrescu&lt;/strong&gt;
is a world-class expert in software development using C++.
In the C++ community, he is best known for his book,
&lt;a class="reference external" href="http://www.moderncppdesign.com/book/main.html"&gt;Modern C++ Design&lt;/a&gt;.
Also, Andrei is a columnist for &lt;a class="reference external" href="http://www.cuj.com/"&gt;C/C++ Users Journal&lt;/a&gt;,
a former columnist for the C++ Report, and a sought-after speaker at
conferences&amp;nbsp;worldwide.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scott Meyers&lt;/strong&gt;
is one of the world&amp;#8217;s foremost experts on C++ software development.
He wrote the best-selling &lt;em&gt;Effective C++&lt;/em&gt; series
(&lt;a class="reference external" href="http://www.awl.com/cseng/titles/0-201-92488-9/"&gt;Effective C++&lt;/a&gt;,
&lt;a class="reference external" href="http://www.awl.com/cseng/titles/0-201-63371-X/"&gt;More Effective C++&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.awl.com/cseng/titles/0-201-74962-9/"&gt;Effective &lt;span class="caps"&gt;STL&lt;/span&gt;&lt;/a&gt;);
wrote and designed the innovative
&lt;a class="reference external" href="http://www.awl.com/cseng/titles/0-201-31015-5/"&gt;Effective C++ &lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/a&gt;;
is consulting editor for Addison Wesley&amp;#8217;s &lt;em&gt;Effective Software Development Series&lt;/em&gt;;
and is a member of the advisory board for
&lt;a class="reference external" href="http://www.sdmagazine.com/"&gt;Software Development&lt;/a&gt; magazine.
He also sits on technical advisory boards for several start-up companies.
A programmer since 1972, he holds an &lt;span class="caps"&gt;M.S.&lt;/span&gt; in Computer Science from Stanford University
and a Ph.D. from Brown&amp;nbsp;University.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Herb Sutter&lt;/strong&gt;
is a leading authority on C++ software development.
Author of more than
180 &lt;a class="reference external" href="http://www.gotw.ca/publications/index.htm"&gt;technical articles and papers&lt;/a&gt;
and of the widely acclaimed books
&lt;a class="reference external" href="http://www.gotw.ca/publications/xc++.htm"&gt;Exceptional C++&lt;/a&gt;
and &lt;a class="reference external" href="http://www.gotw.ca/publications/mxc++.htm"&gt;More Exceptional C++&lt;/a&gt;,
he regularly gives invited talks at conferences around the world
and is available for
private &lt;a class="reference external" href="http://www.gotw.ca/consulting.htm"&gt;training and mentoring&lt;/a&gt;
for new and current corporate&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;Please note that in order to accommodate the increased attendance, this
meeting will be held on &lt;strong&gt;Monday&lt;/strong&gt; at the &lt;strong&gt;Overlake Medical Conference
Center&lt;/strong&gt; rather than our usual Wednesday meeting at&amp;nbsp;Avaya.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 8th, 2003 — Object-Oriented Multithreading in C++ — Bartosz Milewski</title><link href="http://nwcpp.org/october-2003.html" rel="alternate"></link><updated>2003-10-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-10-01:october-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Traditional procedural approach to thread programming is to create a
thread and pass it a function to execute. But a function operates on
data. The data is most likely shared with other threads. In the
object-oriented world data comes first. You create an ActiveObject whose
state develops asynchronously. There is a captive thread inside an
Active Object, but it&amp;#8217;s only an implementation&amp;nbsp;detail.&lt;/p&gt;
&lt;p&gt;I will describe a C++ implementation of Active Object using Windows &lt;span class="caps"&gt;API&lt;/span&gt;
and I will discuss multiple uses of ActiveObject in our own commercial
product, including various synchronization&amp;nbsp;techniques.&lt;/p&gt;
&lt;p&gt;A similar concept in Java is called the Runnable&amp;nbsp;interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz Milewski is the author of C++ In Action, Industrial-Strength
Programming Techniques (Addison-Wesley, 2001). He is the founder of
Reliable Software (&lt;a class="reference external" href="http://www.relisoft.com"&gt;www.relisoft.com&lt;/a&gt;), a
Seattle-based company that makes a peer-to-peer version control system,
Code Co-op. He was one of the architects of the Microsoft Index&amp;nbsp;Server.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2003/Bartosz.zip"&gt;Click here&lt;/a&gt;
to download the source code and slides from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 10th, 2003 — Thread Safe Object—Never Think About Thread Safety Again — David Brownell</title><link href="http://nwcpp.org/september-2003.html" rel="alternate"></link><updated>2003-09-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-09-01:september-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Ask any developer, and they will tell you that multithreaded programming is hard.
Very hard.
One staple of this difficult style of programming
is the effective and thorough use of mutexes and critical sections.
Unfortunately this technique can be tedious and best and produce error
and race conditions at worst.
This presentation will introduce you to ThreadSafeObject,
a generic object that guarantees you will never have
to surround a variable or code with a mutex or critical section ever again.
We will cover generic programming, dive into the magic that
makes auto_ptr work, and discuss meta-programming techniques - the code
that makes an object change behavior at compile time based on type.
Use ThreadSafeObject, and never think about thread safety&amp;nbsp;again!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;David Brownell has been using C++ in a professional environment for the
past 5 years. Graduating with a &lt;span class="caps"&gt;BSCS&lt;/span&gt; from Seattle University in 1998,
David has worked on faxing applications, automated scripting utilities,
secure communications technologies, generic programming techniques, and
peer-to-peer applications. David currently works as a Software Engineer
at Orrtax Software in Bellevue, Washington and serves as president for
the Northwest C++ Users&amp;nbsp;Group.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2003/ThreadSafeObject.zip"&gt;Click here&lt;/a&gt;
to download the source code and slides from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 2003: No Meeting</title><link href="http://nwcpp.org/august-2003.html" rel="alternate"></link><updated>2003-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-08-01:august-2003.html</id><summary type="html"></summary></entry><entry><title>July 2003: No Meeting</title><link href="http://nwcpp.org/july-2003.html" rel="alternate"></link><updated>2003-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-07-01:july-2003.html</id><summary type="html"></summary></entry><entry><title>June 2003: No Meeting</title><link href="http://nwcpp.org/june-2003.html" rel="alternate"></link><updated>2003-06-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-06-01:june-2003.html</id><summary type="html"></summary></entry><entry><title>May 14th, 2003 — The Bizarro World of hetero_stack… — Eric Niebler</title><link href="http://nwcpp.org/may-2003.html" rel="alternate"></link><updated>2003-05-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-05-01:may-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The Bizarro World of hetero_stack, or How I Learned to Stop Worrying
and Love &lt;span class="caps"&gt;RTTI&lt;/span&gt;, or Alignment, Exceptions and Type-Safety, Oh My! or
Subverting the C++ Type System for Fun and&amp;nbsp;Profit.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;hetero_stack is a dynamic replacement for the program stack. Push
anything! Pop anything! I&amp;#8217;ll talk about how to make it work and how to
make it type-safe and exception-safe. (I might even say a few words
about why you might want to do such a thing.) We&amp;#8217;ll cover alignment,
runtime time info and the strong exception guarantee, time permitting.
This talk assumes knowledge of templates and exceptions, but nothing too&amp;nbsp;esoteric.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Eric Niebler studied Computer Science at the University of Virginia. He
spent several years in the Windows 2000 group at Microsoft before moving
to a development position at Microsoft Research in the Natural Language
Processing group. He is now a library developer in the Visual C++ group.
His interests include data structures and algorithms; compiler,
language, and library design; data serialization and persistence; and
pattern&amp;nbsp;matching.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2003/Slides200305.ppt"&gt;Click here&lt;/a&gt;
to download the slides from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 9th, 2003 — New Features in Visual C++ .NET 2003 — Ed Dudenhoefer</title><link href="http://nwcpp.org/april-2003.html" rel="alternate"></link><updated>2003-04-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-04-01:april-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;An overview of the newest version of Visual C++, codenamed Everett.
New features including the &lt;span class="caps"&gt;IDE&lt;/span&gt;, project system, forms designer, compiler,
debugger, conformance, security and library improvements are explained
or demonstrated. Tips and possible breaking changes will also be&amp;nbsp;noted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Ed Dudenhoefer is a Program Manager on the Visual C++ team at Microsoft.
He is responsible for internal and external C++ developer community support
and product&amp;nbsp;adoption.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 12th, 2003 — Resource Management in C++ — Bartosz Milewski</title><link href="http://nwcpp.org/march-2003.html" rel="alternate"></link><updated>2003-03-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-03-01:march-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Everybody knows the adage &amp;#8220;Resource acquisition is initialization.&amp;#8221;
Not many people know that this simple principle gave rise to the whole
methodology of Resource Management (&lt;span class="caps"&gt;RM&lt;/span&gt;).
Bartosz will try to convince us that &lt;span class="caps"&gt;RM&lt;/span&gt; is better than garbage collection.
He will describe auto_vector
— a simpler alternative to a vector of reference-counted smart pointers
(which will most likely become part of the new C++ Standard).
He will also talk about his personal favorite: using &lt;span class="caps"&gt;RM&lt;/span&gt; in Windows (non-&lt;span class="caps"&gt;MFC&lt;/span&gt;)&amp;nbsp;programming.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz is the author of the book,
&lt;a class="reference external" href="http://www.relisoft.com/book/"&gt;C++ In Action&lt;/a&gt;,
published by Addison-Wesley in 2001.
He is also the &lt;span class="caps"&gt;CEO&lt;/span&gt; of Reliable Software &lt;span class="caps"&gt;LLC&lt;/span&gt;
(see his company website &lt;a class="reference external" href="http://www.relisoft.com"&gt;www.relisoft.com&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 12th, 2003 — Mojo — Andrei Alexandrescu</title><link href="http://nwcpp.org/february-2003.html" rel="alternate"></link><updated>2003-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-02-01:february-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Attend this talk to learn about Mojo, the new framework, library, and
coding guideline that enables you to pass and return values without
fearing that copying temporaries is going to ruin runtime performance or
your code review. Mojo guarantees that, if you follow a number of simple
rules when designing your classes, you will totally eliminate
unnecessary&amp;nbsp;copying.&lt;/p&gt;
&lt;p&gt;Learn about Mojo from its own creator for 90 fun and instructive
minutes. Mojo uses a cornucopia of interesting tricks and techniques
that are likely to make your day whether you use C++ (you&amp;#8217;ll be happy
you can apply them) or other languages (you&amp;#8217;ll be happy you can&amp;#8217;t apply&amp;nbsp;them).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei Alexandrescu is working on a graduate degree at the University of
Washington. He is the author of the acclaimed book Modern C++ Design.
Andrei is also a columnist for C/C++ Users Journal, a C++ former
columnist for the C++ Report, a speaker at numerous conferences, and one
of the featured instructors of The C++ Seminar
(&lt;a class="reference external" href="http://www.gotw.ca/cpp_seminar"&gt;www.gotw.ca/cpp_seminar&lt;/a&gt;).
His website is &lt;a class="reference external" href="http://www.moderncppdesign.com"&gt;www.moderncppdesign.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 8th, 2003 — Unit Testing — Asim Jalis</title><link href="http://nwcpp.org/january-2003.html" rel="alternate"></link><updated>2003-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2003-01-01:january-2003.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;The talk will focus on C/C++ unit testing and test-driven development
using the CuTest library. CuTest is simple, portable, and follows the
JUnit look and feel in its output and &lt;span class="caps"&gt;API&lt;/span&gt;. The topics covered will&amp;nbsp;include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduction to Test Driven Development&amp;nbsp;(&lt;span class="caps"&gt;TDD&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Demo of using &lt;span class="caps"&gt;TDD&lt;/span&gt; to write C/C++&amp;nbsp;code&lt;/li&gt;
&lt;li&gt;Comparison of CuTest with other C/C++ unit testing&amp;nbsp;frameworks&lt;/li&gt;
&lt;li&gt;Some testing ideas and&amp;nbsp;techniques&lt;/li&gt;
&lt;li&gt;How to test exhaustively using&amp;nbsp;tables&lt;/li&gt;
&lt;li&gt;How to leverage traditional assert()&amp;#8217;s with unit&amp;nbsp;tests&lt;/li&gt;
&lt;li&gt;How to unit test system calls and &lt;span class="caps"&gt;GUI&lt;/span&gt;&amp;nbsp;code&lt;/li&gt;
&lt;li&gt;Open discussion on testing ideas and&amp;nbsp;problems&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Asim Jalis is a software engineer at Hewlett-Packard Company. He is
currently working on web services management software, which is
primarily in C# and also uses C/C++, Java and Perl.&amp;nbsp;&amp;nbsp; He is deeply
interested in test driven development and ways of making this easier and
more effective. He is the author of CuTest, a unit testing framework for C,
and Test::Extreme, a unit testing framework for&amp;nbsp;Perl.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>December 2002: No Meeting</title><link href="http://nwcpp.org/december-2002.html" rel="alternate"></link><updated>2002-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-12-01:december-2002.html</id><summary type="html"></summary></entry><entry><title>November 13th, 2002 — C++ Techniques for Tomorrow That Can be Implemented Today (aka Boosting your Code) — David Brownell</title><link href="http://nwcpp.org/november-2002.html" rel="alternate"></link><updated>2002-11-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-11-01:november-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This presentation will illustrate techniques to ensure code correctness
at compile time, extend the &lt;span class="caps"&gt;STL&lt;/span&gt;, and enhance C++ using the freely
available and portable boost libraries,
&lt;a class="reference external" href="http://www.boost.org"&gt;www.boost.org&lt;/a&gt;. Beginning with brief overviews
of the boost organization and the boost libraries, we will then explore
ten specific boost libraries, covering the why’s, what’s, and how’s
behind the concepts that enable all three of the techniques listed&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;This presentation assumes familiarity with C++&amp;nbsp;templates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;David Brownell has been using C++ in a professional environment for the
past 5 years. Graduating with a &lt;span class="caps"&gt;BSCS&lt;/span&gt; from Seattle University in 1998,
David has worked on faxing applications, automated scripting utilities,
secure communications technologies, generic programming techniques, and
peer-to-peer applications. David currently works as a Software Engineer
at Aegis Design in Seattle,&amp;nbsp;Washington.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2002/BoostPresentation.zip"&gt;Click here&lt;/a&gt;
to download the slides and source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 9th, 2002 — C++ Features to Beware of Today, and to Anticipate in C++ 0x — Herb Sutter</title><link href="http://nwcpp.org/october-2002.html" rel="alternate"></link><updated>2002-10-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-10-01:october-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;From exception specifications to export, from typedef templates to
typeof to delegating constructors, this talk analyzes current C++
features that you should use with care if at all, and important new
C++0x language features coming soon to a compiler near you. It shows why
the features are useful, where they have areas or effects that can be
dangerous or result in unintended effects, what kinds of coding idioms
and techniques they make possible, when you can expect them to be stable
in shipping compilers, who the people and companies behind them are, and
how you can use them safely and&amp;nbsp;effectively.&lt;/p&gt;
&lt;p&gt;Talk first given at &lt;a class="reference external" href="http://www.thecppseminar.com"&gt;The C++&amp;nbsp;Seminar&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Herb Sutter is conveyor and secretary, respectively, of the &lt;a class="reference external" href="http://std.dkuug.dk/jtc1/sc22/wg21/"&gt;&lt;span class="caps"&gt;ISO&lt;/span&gt; and
&lt;span class="caps"&gt;ANSI&lt;/span&gt; C++ standards committees&lt;/a&gt;,
contributing editor and columnist for &lt;a class="reference external" href="http://www.cuj.com"&gt;C/C++ Users Journal
(&lt;span class="caps"&gt;CUJ&lt;/span&gt;)&lt;/a&gt;, C++ community liaison for Microsoft, and
former editor-in-chief of C++ Report. He is also the author of more than
150 &lt;a class="reference external" href="http://www.gotw.ca/publications/index.htm"&gt;technical articles&lt;/a&gt;
and of the widely acclaimed books Exceptional C++, More Exceptional C++,
and the forthcoming titles C++ Coding Standards (with Andrei
Alexandrescu) and Exceptional C++&amp;nbsp;Style.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 18th, 2002 — Understanding templates as a form of weak typing — Bruce Eckel</title><link href="http://nwcpp.org/september-2002.html" rel="alternate"></link><updated>2002-09-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-09-01:september-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;As I learned the Python programming language (see
&lt;a class="reference external" href="http://www.python.org"&gt;www.Python.org&lt;/a&gt;), I began to understand the
concept of weak/latent typing (which the Smalltalk programmers are so
fond of). At first, this seems like a very heretical and dangerous
approach, but with time I not only began to see how powerful it is, but
also to understand C++ templates in terms of weak typing. I found this
gave me a much deeper understanding of the value and use of templates.
In this talk, I will introduce the Python language and the concept of
weak typing, and I will show C++ templates in the same light. You should
come away with a deeper grasp of templates and where they can be put to&amp;nbsp;use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bruce Eckel (&lt;a class="reference external" href="http://www.bruceeckel.com"&gt;www.BruceEckel.com&lt;/a&gt;) is the
author of Thinking in Java (Prentice-Hall, 1998, 2nd Edition, 2000), the
Hands-On Java Seminar &lt;span class="caps"&gt;CD&lt;/span&gt; &lt;span class="caps"&gt;ROM&lt;/span&gt; (available on the Web site), Thinking in
C++ (&lt;span class="caps"&gt;PH&lt;/span&gt; 1995; 2nd edition 2000), C++ Inside &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Out (Osborne/McGraw-Hill
1993), among others. He&amp;#8217;s given hundreds of presentations throughout the
world, published over 150 articles in numerous magazines, was a founding
member of the &lt;span class="caps"&gt;ANSI&lt;/span&gt;/&lt;span class="caps"&gt;ISO&lt;/span&gt; C++ committee and speaks regularly at
conferences. He provides public and private seminars &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; design consulting
in C++ and&amp;nbsp;Java.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 2002: No Meeting</title><link href="http://nwcpp.org/august-2002.html" rel="alternate"></link><updated>2002-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-08-01:august-2002.html</id><summary type="html"></summary></entry><entry><title>July 2002: No Meeting</title><link href="http://nwcpp.org/july-2002.html" rel="alternate"></link><updated>2002-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-07-01:july-2002.html</id><summary type="html"></summary></entry><entry><title>June 2002: No Meeting</title><link href="http://nwcpp.org/june-2002.html" rel="alternate"></link><updated>2002-06-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-06-01:june-2002.html</id><summary type="html"></summary></entry><entry><title>May 8th, 2002 — Embedded C++ : An Overview — Robert Blumberg</title><link href="http://nwcpp.org/may-2002.html" rel="alternate"></link><updated>2002-05-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-05-01:may-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk sets out many of the parameters that are recurrent when
programming small- to moderately-sized embedded systems in C++. It then
delves into C++ techniques to work within the resource-limited,
cost-sensitive, required-robustness confines of embedded systems. These
techniques are also useful when building &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;nbsp;applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Robert Blumberg has over 35 years of programming experience, having
started by programming on &lt;span class="caps"&gt;IBM&lt;/span&gt; 7090 mainframes. As an executive, he has
been the director of Engineering at Bitstream and a &lt;span class="caps"&gt;VP&lt;/span&gt; of a speech
recognition company among other posts. However, he really enjoys
throwing C++ code, which he has been doing as a freelance programmer for
the last fifteen years or so, mostly for embedded systems and drivers.
Among other projects, he designed and coded the kernel, drivers and
coin-movement software for Coinstar’s big green coin-counting machines
often found in super&amp;nbsp;markets.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 10th, 2002 — Honey, I Shrunk the Threads: Compile-time checked multithreaded transactions in C++ — Andrei Alexandrescu</title><link href="http://nwcpp.org/april-2002.html" rel="alternate"></link><updated>2002-04-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-04-01:april-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk presents a couple of new, safe idioms that bring order in your
C++ multithreaded programs. We will cover three idioms for single-object
transactions and two idioms for multi-object transactions, with
examples. Warning: This talk is rated R for (C++) language abuse,
violence (of debate), and subliminal&amp;nbsp;content.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei is a world-class expert in software development using C++. In the
C++ community, he is best known for his book, Modern C++ Design (Addison
Wesley, 2001). Also, Andrei is a former columnist for the C++ Report, a
columnist for C/C++ Users Journal, and a sought-after speaker at
conferences&amp;nbsp;worldwide.&lt;/p&gt;
&lt;p&gt;After working in large-scale projects ranging from financial software on
Wall Street to networking software to user interfaces, Andrei is
pursuing a Ph.D. in Computer Science at University of&amp;nbsp;Washington.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 13th, 2002 — Schism++: How Microsoft Proposes to Bridge the Gap Between ANSI C++ and the ‘Managed C++’ of .NET — Matthew Griscom</title><link href="http://nwcpp.org/march-2002.html" rel="alternate"></link><updated>2002-03-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-03-01:march-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio 7 .&lt;span class="caps"&gt;NET&lt;/span&gt; has shipped with improved support for
&lt;span class="caps"&gt;ANSI&lt;/span&gt; C++. The whole .&lt;span class="caps"&gt;NET&lt;/span&gt; aspect of this tool, discussed extensively in
this and other forums, is radically new and at first blush is
incompatible with &lt;span class="caps"&gt;ANSI&lt;/span&gt; C++, native code &lt;span class="caps"&gt;COM&lt;/span&gt; objects, etc. This talk will
address some of the aspects of how Microsoft proposes to bridge the gap
between existing source code, &lt;span class="caps"&gt;COM&lt;/span&gt; objects, etc. and executables using
the new suite of .&lt;span class="caps"&gt;NET&lt;/span&gt; technologies, in particular using the ‘Managed
C++’&amp;nbsp;syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Matthew Griscom has coded medical communications protocols, database
integrity tools, a multi-user database engine, &lt;span class="caps"&gt;XSL&lt;/span&gt;-driven web pages, you
name it, for both Unix and Windows. Now, if only one of the cosmonauts
on the Space Station would push the button to use the connectivity
software he designed and wrote, that would be sincerely cool… Matt’s
been dot-bombed and is looking for C++ and .&lt;span class="caps"&gt;NET&lt;/span&gt; work in greater&amp;nbsp;Seattle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2002/Meeting_2002-03.zip"&gt;Click here&lt;/a&gt;
to download the slides and source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 13th, 2002 — Visual C++ .NET — Christian Harlass</title><link href="http://nwcpp.org/february-2002.html" rel="alternate"></link><updated>2002-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-02-01:february-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Microsoft Visual Studio .&lt;span class="caps"&gt;NET&lt;/span&gt; will ship in the coming weeks (at least
they say so) and everybody is talking about C#, &lt;span class="caps"&gt;VB&lt;/span&gt;, &lt;span class="caps"&gt;ASP&lt;/span&gt;, and &lt;span class="caps"&gt;ADO&lt;/span&gt;. What
about C++? How does it fit with new technologies? We will explore a
closer look at the new features of the compiler, the C Run-Time, and
three other libraries, namely &lt;span class="caps"&gt;STL&lt;/span&gt;, &lt;span class="caps"&gt;MFC&lt;/span&gt; and&amp;nbsp;&lt;span class="caps"&gt;ATL&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Christian has come a long way from &lt;span class="caps"&gt;DOS&lt;/span&gt; to Unix and now to &lt;span class="caps"&gt;MS&lt;/span&gt; Windows (as
well as from Germany to Seattle!). Currently he works for Saxonia
Systems, a software consulting company based out of Dresden, Germany.
Besides his duties heading up Saxonia&amp;#8217;s &lt;span class="caps"&gt;U.S.&lt;/span&gt; consulting division in C++
programming, he is constantly keeping an eye on the market for new and
useful programming&amp;nbsp;tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resources"&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/static/talks/2002/VC7Demo.zip"&gt;Click here&lt;/a&gt; to download the source code from the&amp;nbsp;presentation&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 9th, 2002 — Inter-Process Communications Using Shared Memory — Bartosz Milewski</title><link href="http://nwcpp.org/january-2002.html" rel="alternate"></link><updated>2002-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2002-01-01:january-2002.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;You are stranded on a desert island. All you have is a piece of shared
memory and a waitable timer. You are supposed to implement robust
inter-process communications in C++. Bartosz will explain the concept of
shared memory in Win32 and its use in establishing a protocol for data
exchange between processes. It&amp;#8217;s better than &lt;span class="caps"&gt;DDE&lt;/span&gt; and simpler than&amp;nbsp;&lt;span class="caps"&gt;COM&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bartosz is the author of C++ In Action, Industrial Strength Programming
Techniques, published by Addison-Wesley in 2001. During his years at
Microsoft he worked on several projects involving various aspects of
operating systems. He ported the Mach &lt;span class="caps"&gt;OS&lt;/span&gt; virtual memory system to the
x86 platform, took part in the development of the &lt;span class="caps"&gt;HPFS&lt;/span&gt; and &lt;span class="caps"&gt;OFS&lt;/span&gt; file
systems, was the architect and development lead of the Windows 2000
content index. He is now the president of Reliable Software, a
distributed software&amp;nbsp;company.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>December 12th, 2001 — A C++ Programmer’s Introduction to C# — Mike Moskowitz</title><link href="http://nwcpp.org/december-2001.html" rel="alternate"></link><updated>2001-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-12-01:december-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>November 14th, 2001 — JNI: How to use Java and C++ together — Christian Harlass</title><link href="http://nwcpp.org/november-2001.html" rel="alternate"></link><updated>2001-11-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-11-01:november-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Christian Harlass works with Saxonia Systems, an international
consulting company based in Germany. He works as a software developer
and project manager in a Unix, Mac and Windows environment. The idea for
this presentation comes from his project experiences with creating a
portable application with a Java &lt;span class="caps"&gt;GUI&lt;/span&gt; and a C++&amp;nbsp;core.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 8th, 2001 — Inside the .NET Framework — Paul Johns, aka MSDN’s “Dr. GUI”</title><link href="http://nwcpp.org/october-2001.html" rel="alternate"></link><updated>2001-10-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-10-01:october-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Overlake Hospital Educational Conference Center&lt;/div&gt;
&lt;div class="line"&gt;1035 116th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Room A&lt;/div&gt;
&lt;div class="line"&gt;Bellevue, &lt;span class="caps"&gt;WA&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;We&amp;#8217;re very fortunate to have &lt;span class="caps"&gt;MSDN&lt;/span&gt;&amp;#8217;s Dr. &lt;span class="caps"&gt;GUI&lt;/span&gt;, the always entertaining,
often irreverent, generally accurate source of knowledge of all things
.&lt;span class="caps"&gt;NET&lt;/span&gt;, come to speak to us in October. If you haven&amp;#8217;t started working
with .&lt;span class="caps"&gt;NET&lt;/span&gt;, this will be a great introduction to the .&lt;span class="caps"&gt;NET&lt;/span&gt; framework,
techniques and tools. If you have been working with .&lt;span class="caps"&gt;NET&lt;/span&gt;, you can ask
your questions (and perhaps get answers to them) without having to wait
for Dr. &lt;span class="caps"&gt;GUI&lt;/span&gt;&amp;#8217;s next&amp;nbsp;column.&lt;/p&gt;
&lt;p&gt;Paul has written Dr. &lt;span class="caps"&gt;GUI&lt;/span&gt; for over five years now. In addition to the
bi-monthly question and answer column in the &lt;span class="caps"&gt;MSDN&lt;/span&gt; Developer News
newspaper, Dr. &lt;span class="caps"&gt;GUI&lt;/span&gt; has a weekly online question and answer column and a
more-or-less monthly .&lt;span class="caps"&gt;NET&lt;/span&gt; column called Dr.&amp;nbsp;&lt;span class="caps"&gt;GUI&lt;/span&gt;.&lt;span class="caps"&gt;NET&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For a preview of this meeting&amp;#8217;s content, see the online&amp;nbsp;presentation.&lt;/p&gt;
&lt;p&gt;This is a joint meeting of the Northwest C++ User&amp;#8217;s Group and The &lt;span class="caps"&gt;WSA&lt;/span&gt;
DevSIG (Developer&amp;#8217;s &lt;span class="caps"&gt;SIG&lt;/span&gt;) &amp;#8212; formerly known as WinSIG (Window&amp;#8217;s
Developer&amp;#8217;s&amp;nbsp;&lt;span class="caps"&gt;SIG&lt;/span&gt;).&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>September 2001: No Meeting</title><link href="http://nwcpp.org/september-2001.html" rel="alternate"></link><updated>2001-09-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-09-01:september-2001.html</id><summary type="html"></summary></entry><entry><title>August 2001: No Meeting</title><link href="http://nwcpp.org/august-2001.html" rel="alternate"></link><updated>2001-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-08-01:august-2001.html</id><summary type="html"></summary></entry><entry><title>July 2001: No Meeting</title><link href="http://nwcpp.org/july-2001.html" rel="alternate"></link><updated>2001-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-07-01:july-2001.html</id><summary type="html"></summary></entry><entry><title>June 13th, 2001 — Less is More—or How to Get More Bang for Your Code — Andrei Alexandrescu</title><link href="http://nwcpp.org/june-2001.html" rel="alternate"></link><updated>2001-06-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-06-01:june-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;If you are tired of writing code, this talk is for you. The scam of the
century - how to get more behavior with less code - will unveil under
your incredulous eyes. Like in those pyramid schemes, a linear
code-writing investment will bring you quick exponential returns. But
this time it&amp;#8217;s for real. We&amp;#8217;ll experience that with a real-world
example: 12 (t-w-e-l-v-e) industry-strength implementations of the
popular standard string, std::basic_string, in a very compact
presentation. Better yet, you can add your pet implementation,
optimization, or feature with ease. Even better, the code compiles with
the compiler produced by a software company near you. Which, you have to
admit, makes the whole thing as real-world as it gets. Disclaimer:
Motion sickness bags not provided. Attendance is at your own&amp;nbsp;risk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei Alexandrescu is a Development Manager at RealNetworks Inc., based
in Seattle, &lt;span class="caps"&gt;WA&lt;/span&gt;, and author of the acclaimed book Modern C++ Design. He
may be contacted at &lt;a class="reference external" href="mailto:andrei&amp;#64;metalanguage.com"&gt;andrei&amp;#64;metalanguage.com&lt;/a&gt;. Andrei is also a columnist
for C/C++ Users Journal and one of the featured instructors of
&lt;a class="reference external" href="http://www.gotw.ca/cpp_seminar"&gt;The C++ Seminar&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>May 7th, 2001 — Effective STL Sneak Preview — Scott Meyers</title><link href="http://nwcpp.org/may-2001.html" rel="alternate"></link><updated>2001-05-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-05-01:may-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Overlake Hospital Conference Center&lt;/div&gt;
&lt;div class="line"&gt;121 107th Ave &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Bellevue&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;We are very fortunate to have Scott Meyers come to speak with us this
month. Scott of course is the author of &amp;#8220;Effective C++&amp;#8221; and &amp;#8220;More
Effective C++&amp;#8221;, generally acclaimed as two of the most important books
ever written about C++. Every C++ developer should be familiar with
these books. Scott is a highly sought-after speaker and we are grateful
that he has come to speak to&amp;nbsp;us.&lt;/p&gt;
&lt;p&gt;Our meeting will be a world-premiere of Scott&amp;#8217;s material on &lt;span class="caps"&gt;STL&lt;/span&gt; (the
standard template&amp;nbsp;library)!&lt;/p&gt;
&lt;p&gt;Scott&amp;#8217;s description of his talk, presented verbatim:
&amp;#8220;For the past 18 months, Scott Meyers has been exploring the &lt;span class="caps"&gt;STL&lt;/span&gt;, and
on April 30 he sends to his publisher the results of his efforts, the
new book, Effective &lt;span class="caps"&gt;STL&lt;/span&gt;: 50 Specific Ways to Improve Your Use of the
Standard Template Library. In this talk, Scott presents two or three
Items from this new book, items that focus on material not usually
covered in descriptions of the &lt;span class="caps"&gt;STL&lt;/span&gt;. He also hands out flyers for the new
book and urges everyone to buy their usual minimum of three copies: one
for the office, one for home, and one for each of your cars (for when
you&amp;#8217;re stuck in&amp;nbsp;traffic).&amp;#8221;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 11th, 2001 — CPP-Unit Testing Framework — Troy Frever</title><link href="http://nwcpp.org/april-2001.html" rel="alternate"></link><updated>2001-04-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-04-01:april-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;A unit testing framework simplifies the creation of a test suite for a
software project. It encourages the programmer to write the tests along
with the code and to run the suite often for verification of code
changes. Troy Frever will review a C++ framework and report on how it
has been used at Cisco Systems/Active&amp;nbsp;Voice.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;CPP&lt;/span&gt;-Unit is available from the following&amp;nbsp;sites:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.xprogramming.com/software.htm"&gt;http://www.xprogramming.com/software.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sourceforge.net/projects/cppunit/"&gt;http://sourceforge.net/projects/cppunit/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unit testing is a key component of the Extreme Programming Methodology
covered by the following&amp;nbsp;sites:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.xprogramming.com/"&gt;http://www.xprogramming.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.extremeprogramming.org/"&gt;http://www.extremeprogramming.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://groups.yahoo.com/group/extremeprogramming-seattle"&gt;http://groups.yahoo.com/group/extremeprogramming-seattle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recommended book: Martin Fowler&amp;#8217;s &amp;#8220;Refactoring: Improving the Design of
Existing&amp;nbsp;Code&amp;#8221;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 14th, 2001 — XML and C++ — Mike Moskowitz</title><link href="http://nwcpp.org/march-2001.html" rel="alternate"></link><updated>2001-03-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-03-01:march-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Note: If you attended the &lt;span class="caps"&gt;WSA&lt;/span&gt; Developer&amp;#8217;s Seminar on &lt;span class="caps"&gt;XML&lt;/span&gt;, you know that
Mike gave a great presentation on &lt;span class="caps"&gt;XML&lt;/span&gt;. But, he didn&amp;#8217;t talk about&amp;nbsp;C++.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 15th, 2001 — Volatile - Multithreaded Programmer’s Best Friend — Andrei Alexandrescu</title><link href="http://nwcpp.org/february-2001.html" rel="alternate"></link><updated>2001-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-02-01:february-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Wouldn&amp;#8217;t it be great if you could have the compiler help you navigate
the murky waters of multithreaded programming? This talk delves into the
under explored issue of volatile-correctness. The exciting discovery is
- if you follow a couple of simple rules in conjunction with the
volatile keyword, you can transform all race conditions into
compile-time&amp;nbsp;errors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei Alexandrescu is a Development Manager with RealNetworks, Inc. He
is a former columnist of the C++ Report magazine, and a columnist of
C/C++ Users Journal. You can reach him at
&lt;a class="reference external" href="mailto:andrei&amp;#64;metalanguage.com"&gt;andrei&amp;#64;metalanguage.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 8th–9th, 2001 — Microsoft’s .NET Initiative — Jeffrey Richter</title><link href="http://nwcpp.org/january-2001.html" rel="alternate"></link><updated>2001-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2001-01-01:january-2001.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Overlake Hospital Conference Center&lt;/div&gt;
&lt;div class="line"&gt;121 107th Ave &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Bellevue, &lt;span class="caps"&gt;WA&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;: The Overlake Hospital Conference Center is off Old Main Street and
107th in Bellevue, not at the hospital itself. Take Main Street and turn
North onto 107th, conference center will be on your&amp;nbsp;left.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This is a very special, 2-day meeting that we are co-hosting with the
Windows Developer&amp;#8217;s &lt;span class="caps"&gt;SIG&lt;/span&gt; of the Washington Software Alliance. Please try
to attend both&amp;nbsp;days.&lt;/p&gt;
&lt;p&gt;We are very fortunate to have this free presentation from Jeffrey, who
is in great demand as a .&lt;span class="caps"&gt;NET&lt;/span&gt; and Windows development expert. If you
attend only one meeting this year, make it this&amp;nbsp;one.&lt;/p&gt;
&lt;p&gt;Microsoft .&lt;span class="caps"&gt;NET&lt;/span&gt; is a radical new computing platform that promises to
change software development as we know it. Programmers who embrace .&lt;span class="caps"&gt;NET&lt;/span&gt;
will no longer write to the Windows &lt;span class="caps"&gt;API&lt;/span&gt; or rely upon tried-and-true
tools such as &lt;span class="caps"&gt;MFC&lt;/span&gt; and &lt;span class="caps"&gt;ATL&lt;/span&gt;. Instead, they&amp;#8217;ll target a framework called
the .&lt;span class="caps"&gt;NET&lt;/span&gt; Base Class Library (&lt;span class="caps"&gt;BCL&lt;/span&gt;), and a significant percentage of them
will use a new language, C#, to craft their wares. .&lt;span class="caps"&gt;NET&lt;/span&gt; compilers won&amp;#8217;t
produce native machine code as today&amp;#8217;s compilers do; instead, they&amp;#8217;ll
generate a pseudo-machine code called Intermediate Language (&lt;span class="caps"&gt;IL&lt;/span&gt;) that&amp;#8217;s
executed by the .&lt;span class="caps"&gt;NET&lt;/span&gt; run-time. This new programming paradigm will
simplify the Windows programming model and make Web applications easier
to write than ever before. And it will enable a new generation of
software that runs on every conceivable type of computing device, from
the most powerful Web server to the lowliest hand-held&amp;nbsp;&lt;span class="caps"&gt;PC&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Jeffrey Richter is the author of Microsoft Press&amp;#8217; &amp;#8220;Programming
Applications for Microsoft Windows&amp;#8221; and M &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; T&amp;#8217;s &amp;#8220;Windows 95: A
Developer&amp;#8217;s Guide,&amp;#8221; two of the bibles of Windows development. His newest
book, &amp;#8220;Programming Server-Side Applications for Windows 2000,&amp;#8221; was
published by Microsoft Press in&amp;nbsp;2000.&lt;/p&gt;
&lt;p&gt;Jeffrey is also a frequent contributor to Microsoft&amp;#8217;s &lt;span class="caps"&gt;MSDN&lt;/span&gt; Magazine
(formerly called &lt;span class="caps"&gt;MSJ&lt;/span&gt;) and other trade publications, and is &lt;span class="caps"&gt;MSDN&lt;/span&gt;&amp;#8217;s Win32
columnist. More info on Jeffrey at
&lt;a class="reference external" href="http://www.jeffreyrichter.com"&gt;http://www.jeffreyrichter.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Jeffrey Richter, Jeff Prosise and John Robbins have recently combined
forces to created Wintellect, which will no doubt become the preeminent
training and consulting organization of its kind. Jeffrey&amp;#8217;s presentation
to us comes from material he&amp;#8217;s developed for Wintellect courses. More
information at &lt;a class="reference external" href="http://www.wintellect.com"&gt;http://www.wintellect.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>December 2000: No Meeting</title><link href="http://nwcpp.org/december-2000.html" rel="alternate"></link><updated>2000-12-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-12-01:december-2000.html</id><summary type="html"></summary></entry><entry><title>November 13th, 2000 — Microsoft Visual Studio 7 Preview — Martyn Lovell</title><link href="http://nwcpp.org/november-2000.html" rel="alternate"></link><updated>2000-11-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-11-01:november-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Visual Studio 7 is due to be launched early next year, and is
Microsoft&amp;#8217;s first real deliverable in their .&lt;span class="caps"&gt;NET&lt;/span&gt; initiative. Martyn
Lovell of Microsoft will give a preview of Visual Studio 7,
concentrating on C# and&amp;nbsp;&lt;span class="caps"&gt;ASP&lt;/span&gt;+.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>October 2000: No Meeting</title><link href="http://nwcpp.org/october-2000.html" rel="alternate"></link><updated>2000-10-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-10-01:october-2000.html</id><summary type="html"></summary></entry><entry><title>September 13th, 2000 — Change the Way You Write Exception-Safe Code, Forever — Andrei Alexandrescu</title><link href="http://nwcpp.org/september-2000.html" rel="alternate"></link><updated>2000-09-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-09-01:september-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This talk presents the subtle issues associated with writing correct
code in the presence of exceptions. Writing exception-safe code is a
must for preserving the sanity of any application. This task is daunting
because exceptions introduce hidden control flows and require a modified
way of thinking. Several approaches to exception safety are discussed on
a concrete example, with their advantages and drawbacks. In the end an
useful helper class template ScopeGuard is introduced, that enables you
to write exception-safe code that&amp;#8217;s terse, easy to understand, and easy
to&amp;nbsp;maintain.&lt;/p&gt;
&lt;p&gt;“I presented this to someone who hadn&amp;#8217;t worked with exceptions, and in
the end he said: ‘Cool. Exceptions are not hard, supporting them is
trivial. Do they all do it this way?’ He was surprised to hear that most
programmers do it the hard way and that ScopeGuard is&amp;nbsp;cutting-edge.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Andrei Alexandrescu is a Development Manager with RealNetworks, Inc. He
is a former columnist of the C++ Report magazine, and a columnist of
C/C++ Users Journal. You can reach him at &lt;a class="reference external" href="mailto:andrei&amp;#64;metalanguage.com"&gt;andrei&amp;#64;metalanguage.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>August 9th, 2000 — Building a High Performance Server Product on Win NT/2000 Using C/C++ — Chris Hickman &amp; Joe Mullally</title><link href="http://nwcpp.org/august-2000.html" rel="alternate"></link><updated>2000-08-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-08-01:august-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Joe will start by talking about building a high performance server
product on Win &lt;span class="caps"&gt;NT&lt;/span&gt;/2000 using C/C++.&amp;nbsp;Specifically:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I/O Completion&amp;nbsp;Ports&lt;/li&gt;
&lt;li&gt;Object and Context&amp;nbsp;Pooling&lt;/li&gt;
&lt;li&gt;Protocol and Error&amp;nbsp;Mapping&lt;/li&gt;
&lt;li&gt;When and How to use Spinlock vs&amp;nbsp;Interlocks&lt;/li&gt;
&lt;li&gt;Efficient&amp;nbsp;Loops&lt;/li&gt;
&lt;li&gt;Aligning&amp;nbsp;Structs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chris will then finish with a talk about Viathan Corporation and a
software demo. Jeff and Chris will then take some time to answer&amp;nbsp;questions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Chris Hickman, &lt;span class="caps"&gt;CTO&lt;/span&gt; and co-founder of Viathan Corporation, oversees the
technical direction of the company, including new product advances and
the development and test processes. Prior to founding Viathan, Chris
worked for Microsoft&amp;#8217;s Interactive Media Group where he developed core
Internet technologies for the Microsoft Network. As a lead server
developer, he was responsible for design, architecture and
implementation of a storage system for Web-scale applications. He helped
ship two versions of the Microsoft Network and filed for four patents
relating to storage technologies. Prior to Microsoft, Chris spent
several years at Motorola as a software engineer. He was a technical
lead on a software project that developed a suite of Web applications
still used by engineers to facilitate communication and&amp;nbsp;collaboration.&lt;/p&gt;
&lt;p&gt;Joe Mullally, Software Development Manager, Viathan Corporation,
is responsible for managing the development process at Viathan including
the design, development, and development resource allocation for
Viathan&amp;#8217;s distributed data architecture. Prior to joining Viathan, Joe
worked at Microsoft&amp;#8217;s Internet group developing large scale Internet
data services. Most recently, Joe shipped the first releases of
Microsoft Passport, Microsoft&amp;#8217;s e-commerce and Web authentication
service. Prior to Microsoft, Joe worked as a Senior Software Engineer at
&lt;span class="caps"&gt;AVT&lt;/span&gt;&amp;nbsp;Corporation.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>July 2000: No Meeting</title><link href="http://nwcpp.org/july-2000.html" rel="alternate"></link><updated>2000-07-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-07-01:july-2000.html</id><summary type="html"></summary></entry><entry><title>June 2000: No Meeting</title><link href="http://nwcpp.org/june-2000.html" rel="alternate"></link><updated>2000-06-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-06-01:june-2000.html</id><summary type="html"></summary></entry><entry><title>May 10th, 2000 — C++ Exceptions — Bobby Schmidt</title><link href="http://nwcpp.org/may-2000.html" rel="alternate"></link><updated>2000-05-01T00:00:00-07:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-05-01:may-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Overview of C++ exceptions, their rationale, and their usage. Followed
with discussion of standard library support, exception safety
considerations, and comparison with Microsoft&amp;#8217;s &lt;span class="caps"&gt;SEH&lt;/span&gt;. Exception &amp;#8220;gotchas&amp;#8221;
and wisdom sprinkled throughout :^) Talk assumes you understand the
rudiments of C++ exception&amp;nbsp;handling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Bobby Schmidt is a writer, teacher, and programmer. For the past five
years, he&amp;#8217;s been Contributing Editor and monthly columnist for the
&amp;#8220;C/C++ Users Journal.&amp;#8221; He also writes the twice-monthly &amp;#8220;Deep C++&amp;#8221;
column for &amp;#8220;&lt;span class="caps"&gt;MSDN&lt;/span&gt; Online Voices&amp;#8221; magazine. Bobby has taught short
sessions and all-day tutorials at both the Software Development and
Embedded Systems conferences. In previous incarnations, he was an
astronomer, private investigator, radio &lt;span class="caps"&gt;DJ&lt;/span&gt;, and wild-animal&amp;nbsp;curator.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>April 12th, 2000 — Testing Object-Oriented Software — Steve Tockey</title><link href="http://nwcpp.org/april-2000.html" rel="alternate"></link><updated>2000-04-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-04-01:april-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This presentation is an overview of software testing techniques with
special emphasis on the application of those techniques to
object-oriented&amp;nbsp;software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Steve Tockey is Vice President of Consulting at Construx Software in
Bellevue. Steve has been employed in the software industry since 1977,
and has worked as a programmer, analyst, designer, researcher,
consultant, and adjunct professor. His career has included stints at
Lawrence Livermore National Laboratory, The Boeing Company, and Rockwell
Collins, Inc. He has a Masters in Software Engineering from Seattle
University and a &lt;span class="caps"&gt;B.A.&lt;/span&gt; in Computer Science from U.C.&amp;nbsp;Berkeley.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>March 8th, 2000 — Real-World Class Design — Mark Wiseman</title><link href="http://nwcpp.org/march-2000.html" rel="alternate"></link><updated>2000-03-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-03-01:march-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue Northeast&lt;/div&gt;
&lt;div class="line"&gt;Redmond, Washington 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;There is a lot you may need to consider when designing a C++ class
including ease of use, reusability, extensibility, and portability,
etc.. All of these considerations may suffer because of the real-world
pressures of time and money. Mark will talk about C++ class design using
two classes from recent projects, a password generation class and a
class for searching disks for specific&amp;nbsp;files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;Mark Wiseman is president of &lt;a class="reference external" href="http://www.cosolutions.com"&gt;Corner Office Solutions,
Inc.&lt;/a&gt; A company that develops custom
Windows software for business management. Mark is also president of the
Northwest C++ User&amp;#8217;s Group. You can e-mail him at
&lt;a class="reference external" href="mailto:mwiseman&amp;#64;cosolutions.com"&gt;mwiseman&amp;#64;cosolutions.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>February 15th, 2000 — Datatypes++, A C++ Class Library for Windows — Tom Dowdell</title><link href="http://nwcpp.org/february-2000.html" rel="alternate"></link><updated>2000-02-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-02-01:february-2000.html</id><summary type="html">&lt;div class="section" id="location"&gt;
&lt;h2&gt;Location&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://www.avaya.com"&gt;Avaya Corporation&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;6464 185th Avenue &lt;span class="caps"&gt;NE&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Redmond, &lt;span class="caps"&gt;WA&lt;/span&gt; 98052&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="abstract"&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Tom, a &lt;span class="caps"&gt;NWCPP&lt;/span&gt; member, will introduce his company, Intuitive Edge Corp.,
and Datatypes++, Intuitive Edge&amp;#8217;s first product. Datatypes++ is a C++
class library for Windows that extends C++&amp;#8217;s datatypes to text, exact
numeric, date, time, binary, bitset and others. Tom will start by
covering the process of starting a software company and the evolution of
the company&amp;#8217;s accomplishments and goals. The primary body of the talk
will focus on dreaming up an idea for a software product and bringing it
to market. Tom encourages members to download the beta 1 version of
Datatypes++ from the Intuitive Edge Web site , www.IntuitiveEdge.com.
This way, he can field specific questions about the product and the
design decisions he has made about the&amp;nbsp;product.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bio"&gt;
&lt;h2&gt;Bio&lt;/h2&gt;
&lt;p&gt;About Tom&amp;nbsp;Dowdell:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Programming since 1982, professionally since 1986, C since 1987, C++
since&amp;nbsp;1991&lt;/li&gt;
&lt;li&gt;Graduated from Nicholls State University in Louisiana in 1987 with
Computer Science&amp;nbsp;&lt;span class="caps"&gt;B.S.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Developed a free-form database product for PCs in Pascal, Torrent!,
(independent of full time job) which achieved limited&amp;nbsp;success&lt;/li&gt;
&lt;li&gt;Hired by Microsoft in 1990 as a Software Design Engineer in the &lt;span class="caps"&gt;SQL&lt;/span&gt;
Server database&amp;nbsp;group&lt;/li&gt;
&lt;li&gt;Left Microsoft in 1996 to start a software company, Intuitive&amp;nbsp;Edge&lt;/li&gt;
&lt;li&gt;After 2 years R&amp;amp;D, focused specifically on designing a C++ class
library,&amp;nbsp;Datatypes++&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary></entry><entry><title>January 2000: No Meeting</title><link href="http://nwcpp.org/january-2000.html" rel="alternate"></link><updated>2000-01-01T00:00:00-08:00</updated><author><name>nwcpp</name></author><id>tag:nwcpp.org,2000-01-01:january-2000.html</id><summary type="html"></summary></entry></feed>